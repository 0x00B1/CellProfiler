TODO_DONE list  ------- NEW ENTRIES GO AT THE TOP, WITH YOUR NAME & DATE

-(Colin 10.21) - (Requested by Anne 8-29-05) - Add a check box to the main GUI (in the space near pixel size) for 'Diagnostic mode'. This would basically be like running the SpeedUpCellProfiler module option that strips out the handles.Pipeline just before saving the output file which dramatically reduces the output file size. I think people rarely want the contents of the Pipeline unless they are actually intensively writing a new module, so mostly it just adds a ton of extra data to the file.  The default should be to *not* run in diagnostic mode, and there should be a '?' button nearby telling the user what this does (the SpeedUpCellProfiler module might have a description you could copy & paste).

-(Mike 10/21)(E-mailed Ray if 1.0 is correct, it was already default at this) (Requested by Anne 10-20-2005) - In the IdentifySecondary module, it says to give a regularization factor for Propagate and for Distance-B. I am pretty sure that the regularization factor is really only needed for the propagate option and that you require it for the Distance-B option just so that the subfunction doesn't fail, right?  we should adjust the variable description to make the regularization factor not required for Distance-B option. Perhaps this would require rewriting the subfunction to not choke if it doesn't receive a regularization factor, or if option = = Distance-B, then reg factor = some arbitrary number, like .05, even though that number won't actually be used.

-(Mike 10/21) (Requested by Susan 10-21-2005) -got error when I tried to use ImageTool-showPixelIntensityHistogram 
??? Error using ==> waitforbuttonpress
waitforbuttonpress exit because all figures have been deleted.

Error in ==> ShowPixelIntensityHistogram at 25
waitforbuttonpress

??? Error while evaluating uimenu Callback.

-(Mike 10/21) (Requested by Anne 10-21-2005) - File > New pipeline should ask for confirmation: 'Are you sure you want to clear the current pipeline?'

-(Mike 10/20) (Requested by Anne 10-18-2005) - get rid of variables inthe workspace for the add module window.

-(Mike 10/20) (Requested by Anne 10-18-2005) - fix the questdlg background color thing.

-(Mike 10/20) (Requested by Anne 10-18-2005) - Report Mac SP# bug to matlab: questdlg('qstring','title') does not pay attention to tabbing to highlight the button you want to press.

-(Mike 10/20) (Requested by Anne 10-18-2005) - Make sure CP doesn't start if it's already open. 'Modal' is good but not sufficient. whatever code starts up when you start CP should be ignored if CP is open.

MINOR ISSUE (should wait for someone to fix it who has SP3 7.1 on a mac)>>>
-(TRYING TO FIND FIX FOR SLIDER, BUT NOT SURE IT EXISTS) (Requested by Anne 10-12-2005) - Fix the background color for the variable popupmenus - on the mac with new SP3 7.1 they are white instead of .7 .7 .9  Also, the background color of the highlighted 'Yes' button when clicking Close Windows is black so it looks a little funny. Also, the sliders (when there are not enough contents of listboxes for them to be active) have a stark white background.

-(Mike 10/18) Add text (e.g. After selecting module:) to AddModuleWindow for help buttons; IMPLEMENT NEW LOOK: Two listboxes, one with heading names and other with modules for that heading. Will change when new heading is highlighted?

-(Mike 10/18) (Requested by Anne 10-10-05) - Probably most modules should have a warning at the beginning if the image is outside the range 0-1.  Will have to think carefully about which modules would need this warning in order for them to function properly.  Make sure the warn  dialog does not pop up fresh each time - i think there is a way for matlab to only open the dialog if there isn't already a copy open.

-(Mike 10/18) (Requested by Anne 10-12-05) - In the listbox at the lower left, currently clicking on files there does nothing. It would be cool if the user doubleclicks on something in the listbox the following would happen: if if it's a PIPE or OUT file, check that it has the appropriate fields (Settings or handles.Settings) and ask the user if they want to load the pipeline from the file. If not, try to open it as an image, using the ImageTool for opening images.

-(Colin 10/17)- (Requested by Anne 8-24-05) I HAVE STARTED ADDRESSING THE ABOVE CONCERNS IN THIS MANNER - I have written QuickFixConvertObjectsToImage module. We should develop this further so that it can be used to convert objects into images that are savable by SaveImages. It should also be able to convert objects to images in order to pass them down the pipeline (because if you wanted to process a label matrix image downstream, you can't select its object name in downstream modules because only imagegroup members are selectable in downstream modules). The ability to use this module with the SaveImages module will replace the last few variables and related code from each individual Identify module which will be more streamlined. This module should include options (1) convert entire objects or just outlines, (2) binary, grayscale in range 0 to 1 (be sure to think about what happens if there's more than 256 objects), or RGB. For RGB, allow the user to choose which colormap (e.g. jet, bone, autumn, etc).  We might even include an option to allow overlaying outlines on some image, because that's really handy.

-(Colin 10/17)- (Requested by Anne) - In a similar manner, many identify modules produce a label matrix image and there is an option to save this image in colored label matrix format. I'd like to take this feature out of each individual identify module (it adds another image to the handles structure which takes up space) and instead have the SaveImages module have an option to convert a label matrix to color. Perhaps we can then also have an option in SaveImages to choose the colormap to be used for this conversion. It's useful to take it out of each individual identify module because it's not very common that someone actually wants to save or use the colored label matrix downstream. It's usually just for display purposes during processing. This also is one less thing to make sure is present in every Identify module.

-(Colin 10/17) - Remade the SaveImage Module.

-(Colin 10/17) - (Requested by Anne) - Many of the identify modules produce object outlines on top of the original image. I would like to change all of these so that the outlines only (without the underlying grayscale image) are saved in the handles structure (maybe as logical/binary images?) and then you can overlay them on an image using a separate module. This allows more flexibility. (for example, identify well spots doesn't know what the 'original image' is so it can't display outlines on an original image). It also reduces the size of the image stored in the handles structure, since it would be a logical format rather than full 8 bit, but that's a minor advantage. To accomplish this, we should make a module 'AddImages' that can add two images' pixel values in the normal manner but also has an option to make one of the images' nonzero values be either (a) the maximum allowed value for a particular image format (e.g. 255 for 8 bit images) or (b) the maximum of the grayscale image (e.g. if an image has values from 0 to 0.17, the binary outlines would be assigned the value 0.17). We have already made this change for IdentifyEasy but we need to do a similar thing for the other IdentifyPrim and Sec and Tertiary modules (there is currently a push in progress to merge all identifyprim modules into IdentifyEasy and all IdentifySec modules into one, so perhaps check that first).
This also affects the "SAVING IMAGES" portion of the help for each module, so update the other modules' help using IdentifyEasy's as a template.

-(Mike 10/17) Make IdentifySecondary use same thresholding options as IdentifyPrimAutomatic, CPthreshold?

-(Mike 10/17) (Requested by Anne) - Analyze Scott Floyd's images by writing a new speckle finding module.
- (Requested by Anne) - Make a module to identify and count and measure objects within previously identified objects (e.g. nucleoli or organelles or speckles within nuclei or cells). This also requires designing a way to store measurements of Subobjects. Here's Ola's suggestions:

	From: 	  friman@bwh.harvard.edu
	Subject: 	Storing subobjects
	Date: 	August 13, 2005 3:03:31 PM EDT
	To: 	  carpenter@wi.mit.edu

One simple way to store subobjects that fits into the current way
of saving measurements is simply to have a "feature/measurement" that
indicates the number of the parent object.
For example, to have a structure handles.Measurements.Nucleoli that in addition
to the usual measurements contains a handles.Meaurements.Nucleoli.Parent field
where the number of the corresponding parent object is stored, and a handles.Measurements.Nucleoli.ParentFeatures
which indicate the name of the parent (e.g. 'Cells' or 'Nuclei'). It is not straightforward to have a
similar entry for the parent objects since the parent objects (e.g. Cells) can have
a different number of children (while each child only has one parent object). Storing the numbers of the
children of a parent is not straightforward in the current measurement system, because the parent
objects can have a different number of children. This would require storing a cell array with
the numbers of the children for each parent object, and that would
cause problems for all data tools that don't know how to handle this cell array when
they encounter it. However, I guess there can be a handles.Measurements.Cells.Children field which contains
the names of the children objects (e.g. 'Nucleoli', 'Organelles', 'Speckles'....) but not corresponding numbers.
If one wants to find the children of a  certain Cell object with number K, one must then look in
handles.Measurements.Cells.Children to find the  name of the children (e.g. 'Nucleoli', 'Organelles', 'Speckles'....)
and then search e.g. handles.Meaurements.Nucleoli.Parent for the Nucleoli objects that have object K as parent.
It think it would be quite simple to introduce the above system in the IdentifyPrimary/IdentifySecondary/IndentifyTertiary
way of identifying objects.

Best,
Ola

-(Mike 10/17) (Requested by Anne) - Analyze Merck images - set up general morphology pipeline, possibly with illum correction, and we will send them the numerical measurements from all three images. The major goal is to figure out crucial morphological differences between the two images that aren't bright green.

-(Mike 10/17) (Requested by Anne 10-12-2005) - The main GUI mostly looks fine on SP3  7.1, except the text Output filename is shifted over about two characters too far to the right. It'd also look a bit better if we could move Pixel size and Adjust modules just one pixel to the left.

-(Mike 10/13) Requested by Anne 10-12-2005 - Make a new module called "Flip" which uses the Matlab functions flipud and fliplr to flip an image. Simple inputs: Input image name, output image name, and choose between flip left/right and flip top/bottom (popup menu).  We considered adding this to the Rotate module, but rotate has a bunch of other options relating to the angle of rotation, so it seemed better to have a separate module. Still open for debate though.

-(Mike 10/13) (Requested by Anne) - prepare outlined example images for John Elliott at NIST and prepare email to be sent. We don't need to send CP code right now. In the email, ask him why one folder had only red - we could probly still analyze them but weren't sure if that was the point.

-(Mike 10/13) Requested by Anne 10-12-2005 - Help > ImageTools and Help > DataTools doesn't seem to work - doubleclicking something in the list box or clicking OK doesn't seem to do anything, but there isn't any error msg produced either.  I think maybe it works the first time you click something but not subsequent clicks?

-(Mike 10/13) Requested by Anne 10-12-2005 - Help > General Help is displaying the correct listbox full of help files but the title of the window and the instructions at the top are referring to Tools rather than just general help.

-(Mike 10/13) (Requested by Anne 10-12-2005) - New Service Pack 3 (version 7.1) requests: We commented out the bug workaround which reverses the slider for macs, but we need to put it back in if the user is using a mac && the user is using version 7.0 or earlier. Also, somewhere in the code when you click on a module in the pipeline, the slider is reset so it's supposed to display the top variables (the slider indicator is in the top position), but on my new SP3 7.1 setup, the slider is always placed in the bottom position - is this working ok on the PC, or is it another workaround that needs to be un-worked around for 7.1 and later?

-(Mike 10/12) Change installation guide to use "run /Applications/CellProfiler.m"

-(Mike 10/12) (Requested by Anne 10-11-2005) - Convert SplitUpAviMovie and SpliceAVIMovie (in DeveloperScripts) into a combined, regular CP module called SplitOrSpliceMovie.

-(Mike 10/12) (Requested by Anne 10-10-05) - Make CalculateStatistics module based on Ilya ravkins m files i emailed. Let me know when it's done and we can calculate the stats on the SBS competition and see how we did!!

-(Mike 10/12) (Requested by Anne 10-12-2005) - Mike, see whether doublegraythresh is used in the code anywhere, and if not, move it to Outdated as per my discussion with Ray:
I think this was Colin's, when he was looking at using Otsu's method
to segment three-level images.  I'm not sure if it got incorporated at
some point, or it was abandoned.
Ray

On 10/11/05, Anne Carpenter <carpenter@wi.mit.edu> wrote:
Hi,
There is a file in DeveloperScripts called doublegraythresh.m  Can you
determine whether this is useful to us at all? My guess is that someone
was playing around with it and abandoned it, so I was planning to move
it to Outdated unless you object.

-(Mike 10/12) (Requested by Anne 10-12-2005) - The following disclaimer needs to be added to the LICENSE file. We may also need to change our statement about GPL to read something like "Use of this software is governed by GPL plus the disclaimer present in the LICENSE.txt file".

-(Mike 10/12) (Requested by Anne 10-11-2005) - Retrieve the help from LoadImagesOrder and LoadMovies (Order & Text) and incorporate into LoadImages... we should make sure that we've not lost help from modules that were recently combined b/c a lot of work went into writing it up in the first place!

-(Mike 10/12) (MADE INITIAL CHANGES, WHAT TO DO FROM HERE) (Requested by Anne 9-01-05) - The AddModule window still needs a bit of work; it doesn't look very compact and neat. The browse button should be small and placed near the current path.  The other buttons could be smaller and more compact (e.g. move both help buttons up and have the word 'Help' placed between them). I'd vote for getting rid of the frames so that there is less clutter, and having just one frame around the buttons along the bottom, once we've removed the unnecessary buttons. I think we should get rid of the 'Add module' button and instead just have text say "Doubleclick to add modules to your pipeline" (maybe the title of the window itself should state that text; otherwise it could just be text along the top of the window). We could get rid of the Done button and assume the user will use the normal mechanism to close the window.
NEW IDEAS>>>  if no module selected and you clikc module help, it shoudl say 'click and then push this button'
'adding modules' help should be called '? Getting Started'
Did we lose the ? button above object processing?
Too much empty space at the top
change add module to Add Selected Module
Select a module, then...  [Add to pipeline] [get help on that one]
Done should be in bottom right or get rid of it altogether
Get rid of large frame? leave bottom one?
switch buttons with pathname

-(Mike 10/12) (Requested by Anne 10-11-2005)  - Remove makezips.sh from DeveloperScripts. Its functionality is now built into CP, as File > Save current CP code.

-(Mike 10/12) (Requested by Anne 10-11-2005) - Move CreateIlluminationCorrectionImageFromProjection.m to Outdated

-(Mike 10/12) (Requested by Anne 10-10-05) - Change the name of RGBMerge to GraytoRGB, and adjust the ExampleFlyPIPE & OUT accordingly.  Maybe also: should we change "RGB" to "Color", so it's GrayToColor and ColorToGray? I think this might make it nicer for biologists. Not sure if the general public knows what RGB means.

-(Mike 10/12 DECIDED THAT CELLPROFILER SHOULD ONLY ADD FOLDERS TO PATH IF THEY DO NOT EXIST) (Requested by Anne 10-10-05) - We should somehow let the user change the path specifying which CellProfiler code will be used since we often have several copies of CP on a single computer. Option 1: allow the user to choose which CellProfiler will be used somewhere in CellProfiler itself (e.g. in the Set/LoadPreferences window). But would this allow the changes to take place immediately, or would it be a problem that CellProfiler is already running when the path is set? I would guess that changing the path would allow the Modules or subfunctions in the new location to be used, but I am not sure whether the CellProfiler.m file in the new location would be used when CP is already open and running. Option 2: we could remember to start up CellProfiler in Matlab using the full path (i.e. type this:  /Users/anne/trunk/CellProfiler/CellProfiler  rather than just typing CellProfiler to start it up). I think the code we have currently in place would work - e.g. adding the Modules subfolder to the path I think is done when you click the Add Modules button but I am not sure it pays attention to which CellProfiler is being run in order to use the same path.

In this process, we should check every use of the command 'path' to make sure that we aren't adding other things to the path so that it behaves as expected.

-(Mike 10/11) (Requested by Anne 10-10-05) - For pathnames that are entered as variables, I think most do not allow you to specify relative pathnames, for example:   ./Subfolder1  (meaning the default image folder + /Subfolder1).  We would like to make this possible.

-(Mike 10/11) (Requested by Anne 10-10-05) - IdentifyPrimManually - the colormap is not applied to the image when you are asked to click on points.  Also colormap doesn't seem applied in DisplayGridInfo module. DisplayGridInfo seems a little unpolished - e.g. it says 'Figure1' at the top rather than saying which module it is, and it doesn't say what image # it is. We'd like to be able to change the text properties and gridlines in a manner similar to DefineGrid's display, so that code should be copied over to DsiplayGridInfo.

-(Mike 10/11) (Requested by Anne 10-10-05) - send beta terms, current CP code, ExampleFlyPIPE, and link to images to juergen@hedges-klenk.com This should be very similar to what you sent to Max Sonnleitner recently, except it should include fresh code & PIPE. Hello, Anne asked me to send you the beta version of CellProfiler to play with....

-(Mike 10/11) (Requested by Anne 10-10-05) - In the LoadImages module, if the incoming image is 16 bit AND if the maximum value in the image is below 1/16th of the usable range (0.0625 in the 0-1 scale), have a warndlg pop up to warn the user that their incoming image might be a 16 bit image format using an image collected with a 12 bit camera, so they might want to use the rescale intensity module (and then explain how to do that).  Make sure the warn dialog doesn't pop up fresh each time around the pipeline (only if setbeinganalyzed == 1). 

-(Mike 10/11) (SINCE THIS RUNS OF SAVEIMAGES MODULE, CAN NOW ADD FEATURE TO USE OPTIONS WHICH ARE SPECIFIC TO THE IMAGE TYPE, WILL THIS FIX PROBLEMS?) (Requested by Anne) - Save Image As tool: does not work well for all kinds of displayed images (e.g. The mean image produced by correct illum divide all mean comes out weird). Test it with a bunch of image outputs and make it more compatible.
>>Make the variable descriptions in the Save Image As window match the fuller, better descriptions in the SaveImages module.

>>>'color',8,'string,'twttt'
>>> in the help, point then to the imwrite help.

-(Mike 10/11) (COULDNT REPRODUCE, BUT WE CAN JUST REMOVE RGB BUTTONS FROM TEXT ONLY DISPLAY) (Requested by Anne) - The RGB buttons on CPfigures produce an error at the command line when the figure is only displaying text. It should either produce a warning dialog stating what the RGB buttons are for and that there is no image in the window, or it should just do nothing.
??? Error using ==> set
Index exceeds matrix dimensions.
??? Error using ==> set
Error while evaluating uicontrol Callback.

-(Mike 10/11) (WHICH ERROR DIALOGS, DONT THINK ERROR AND ERRORDLG CAN BE CHANGED) (Requested by Anne) - The error dialogs are not proper CP color. Also, in several places, we use the helpdlg Matlab function and so the color of the resulting help dialog window is not the proper CP color.

-(Mike 10/11) (Requested by Anne 10-10-05) - Move CPsplash.jpg to CPsubfunctions. Take capitals out of other subfunctions' names.

-(Mike 10/11 *.* IS MATLAB BUG) (IMAGE LOOKUP NOW WORKS, PLEASE SHOW ME *.* PROBLEM) (Requested by Anne 8-24-05) - The ShowDataOnImage ImageTool is very buggy lately. In particular, it can't seem to look up the image filenames, and when it lets you choose an image file, on the mac it has the annoying {*.*} problem so that you can't choose an image file until you change the dropdown menu for file format in the uigetfile window.

-(Mike 10/07) (Requested by Anne) - Add a happy dialog box that shows while CellProfiler is loading.  Include the CellProfiler logo, 'CellProfiler is starting up...' text, the authors & contributors, etc.

-(Mike 10/07) Add 'New Pipeline' button

-(Mike 10/06) (Requested by Anne) - Make ImageTiler produce a button in the final figure that allows retrieval of a high resolution image. (Click the button, then click the part of the image you want to see in more detail). There should also be a button that allows you to select the folder where the images are stored so that the high-res button knows where to go to look for the images, in case they are not in the same place they were when the figure was originally made.  Adjust the help if ImageTiler to reflect this change when it's made.

-(Mike 10/06) (Requested by Anne 9-21-05) - THere is a cool tool for interactively selecting a threshold. Perhaps we can add a 'test mode' button for the Identify modules that allows you to choose a threshold the first image cycle. It would use this code:
http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=6770

-(Mike 10/05) (Requested by Anne) - The CreateWebPage module needs help documentation and to be put in the category 'Other', and the license info, etc.  If there is nothing of interest to display in the figure for this module, it ought to close during the first cycle. The popup window is the wrong color at the end after the html file is saved.  The 'Download zipped file' html code should be at the top of the page rather than the bottom.

-(Mike 10/05) (Requested by Anne) - There is a bit of functionality in IdentifyPrimThreshold which is lost in IdentifyPrimAutomatic: the ability to calculate a threshold based on all images of a given type and then apply that global threshold to each image.  This ought to be added to IdentifyPrimAutomatic.

-(Mike 10/05) (Requested by Anne 9-21-05) - If a matlab file is corrupt, there is a command line error that is not caught by CellProfiler:
??? Error using ==> load
Unable to read MAT-file /Users/anne_carpenter/Desktop/illum10PIPE.mat
File may be corrupt.
Error in ==> CellProfiler>LoadPipeline_Callback at 427
LoadedSettings = load(fullfile(SettingsPathname,SettingsFileName));
Error in ==> CellProfiler>gui_mainfcn at 4849
        feval(varargin{:});
Error in ==> CellProfiler at 42
    gui_mainfcn(gui_State, varargin{:});
??? Error while evaluating uimenu Callback.

-(Mike 10/05) (Requested by Anne) - Whenever anything is saved to the hard drive, add an error check to see whether the user has permission to write to that location (esp. CellProfiler.m and AlgSaveImages.m). From within the target directory, run: [ignore,Attributes] = fileattrib, if Attributes.UserWrite == 0, then error(INSERT PROPER ERROR STUFF HERE), end 

-(Mike 10/04) (Requested by Anne 9-08-05) - Make measure windows expand to fit the number of lines of data (and the number of columsn) that are produced. Maybe try using CPtextdisplaybox.m, which displays text using a slider so it's infinitely expandable.

-(Mike 10/04) (Requested by Anne) - Put in some way to save a figure (either a module or ImageTool). (Anne thinks the best approach is to adapt SaveImages module and SaveImageAs image tool to be able to save .fig format).

-(Mike 10/04) (Requested by Anne) - SaveImages module - have a way that you can type in special formatting. E.g. if you are going to save in gif mode, you should be able to type in the optional parameters like 'BackgroundColor',0 into a text box and have that text appended within the imwrite command.

-(Mike 10/04) (Requested by Susan) - on WriteSQL module: if I only include WriteSQL module in pipeline I don't get an error message. The same thing with the situation if I only include WriteSQL and CreateBatchScripts modules in the pipeline. It will be nice to let user know that these are no useful pinelines.

-(Mike 10/04) (Requested by Anne 9-07-05) - In the modules where we use pathnameVAR to create a long box with a browse button, the variable descriptions all need to be changed to state that you can type a period (.) to use the default image directory (or output directory, depending on the context).

-(Mike 10/03) (Requested by Anne) - The help box that opens when you click for information about a specific module has a scrollbar when the text is very long. The window is re-sizable, but resizing doesn't allow the text to wrap around nor does it allow any more text to be viewed. We should either allow things to wrap in a more sophisticated way, or we should make the window non-resizable.

-(Mike 10/03) (Requested by Anne) - In File > Open Image, underscores in the file name are not displayed as underscores - instead they make the character after the underscore appear as a subscript. We have fixed this elsewhere (I think in the histogram tool).

-(Mike 10/03) (Requested by Anne 8-30-05) - If the user enters an odd number for CPsmooth (a subfunction used by the Smooth module, among others), right now it yields the error 'The text you entered for the smoothing..." and it cancels all processing. Instead, let's have it continue processing by rounding the user's entry down to the nearest integer but meanwhile pop up a warning dialog box telling the user that their entry has been rounded down.  Make sure the warning dialog box does not pop up new every time around the cycle (maybe only if setbeinganalyzed = 1).

-(Mike 10/03) (Requested by Anne 9-01-05) - The waitbar window produced by the CorrectIllumination_CalculateUsingIntensities module stays  open after closing CellProfiler (it must not have the UserData indicating that it's a CellProfiler-related window). And, it's the wrong color.

-(Mike 10/03) (Requested by Anne 08-30-05) - If the current default image directory no longer exists and then you go do anything like File > Open Image, there is a command line error that the directory cannot be found.  Do we need to change all instances of cd to CPcd that is able to handle this kind of error and warn the user?
??? Error using ==> cd
Cannot CD to /Users/anne_carpenter/Desktop/2005_09_20NovartisYeast (Name is nonexistent or not a directory).
Error in ==> OpenNewImageFile at 45
cd(handles.Current.DefaultImageDirectory);
Error in ==> CellProfiler>OpenImage_Callback at 3586
OpenNewImageFile(handles);
Error in ==> CellProfiler>gui_mainfcn at 4788
        feval(varargin{:});
Error in ==> CellProfiler at 42
    gui_mainfcn(gui_State, varargin{:});
??? Error while evaluating uimenu Callback.

-(Mike 10/03) (Requested by Anne) - In SaveImages, have the file format in which to save images be a popupmenu based on what is compatible with the imwrite command of matlab, plus .mat files. If possible, this list should be automatically obtained (in the same way that typing imread or CPimread lists the file formats), but i don't know if imwrite yields a list like that. Or maybe it's the same list as imread.

-(Mike 10/03) (Requested by Anne) - There is a file in the DeveloperDropBox called MeasureDescriptions. These descriptions should be spliced into the help for the measure modules.

-(Mike 10/03) (Requested by Anne 08-30-05) - There are two ways to generate a text file containing the current pipeline settings and they should be made consistent with each other (e.g. sharing a subfunction so they produce the exact same results). One way is to use DataTools > ExportData and generate the 'Process Info' file, and the other way is to File > SavePipeline, and then save also as a text file. At the moment, the File > SavePipeline, using the text option, is broken, so I don't know what sort of file it is trying to produce. Most likely, it is producing something similar to ExportData so I don't know whether the code from that would be helpful or not. The ExportData method is pretty close to what we want, with these changes:
> move the pixel size and number of image sets to the top of the file (after the processing date & time).
> Is the processing date & time the start time or end time? Label it appropriately.
> I think we store variable descriptions in the handles structure in output files - if so, I'd like to print out the variable descriptions next to each value. In other words, replace the text "Variable 1 Value" with the actual variable description.
> at the moment it produces a bit *too* much information.  we do *not* need to list all the info about each image set, because this information is already exported in the "Image" structure when you export data. 

-(Mike 9/30) (Requested by Anne 09-21-05) - MeasureImageSaturationBlur's figure color scheme is weird.

-(Mike 9/30) When you add a module that's expecting an imge but there are no modules yet that produce an image, the popup menu for imageroup is empty. but it stays empty even if you later add an module that produces an image.

-(Mike 9/30) This dialog pops up even if I have saved my preferences to my own filename:  helpdlg('Your CellProfiler preferences were successfully set.  They are contained in a file called CellProfilerPreferences.mat in the Matlab root directory.')

-(Mike 9/30) (Requested by Anne) - Adapt MeasureAreaOccupied to use the same threshold options as are in IdentifyPrimAutomatic.  Also, its measurements are not saved in the proper structure format. It looks like this when I analyzed three image cycles:
handles.Measurements
ans = 
             ImageAreaOccupiedStainedRegion: {[156845]  [424211]  [336473]}
    ImageAreaOccupiedThresholdStainedRegion: {[0.0174]  [0.0406]  [0.0290]}
But these measurements should actually be in handles.Measurements.Image in two separate fields - one with the measurements and the other with the feature names, and with these two fields listed above being features.  This should make the module compatible with the MeasureRatios module, so we should then adjust the MeasureRatios module so you can choose these measures.

-(Mike 9/30) REQUESTED by anne - OpenNewImageFile does not work for .mat files (where the variable is 'Image', see LoadImages.

-(Mike 9/30) (Requested by Anne 8-24-05) - The SaveImageAs ImageTool gave this error when I tried to use it on a IdentifyPrimAutomatic figure window that was saved as a matlab fig file and then reopened later:
??? Invalid handle object.
Error in ==> SaveImageAs at 29
    MainWinPos = get(handles.figure1,'Position');
??? Error while evaluating uimenu Callback.

-(Mike 9/30) (Requested by Anne 9-22-05) - To be consistent with the other modules, I think we should change the MeasureImageSaturationBlur fieldnames a bit. Right now, it looks like this:
> handles.Measurements.Image
ans = 
           FocusScoreFeatures: {'FocusScore OrigGreen'}
                   FocusScore: {[0.1509]  [0.0999]  [0.1208]}
    PercentSaturationFeatures: {'PercentSaturation OrigGreen'}
            PercentSaturation: {[0]  [0]  [0]}

I think instead it should be SaturationBlur_OrigGreen and SaturationBlur_OrigGreenFeatures, and then the feature names would be BlurScore (not FocusScore) and PercentSaturated (not PercentSaturation). As it currently is, subsequent modules would overwrite the results here, because there is no image-specific thing added to the main field name.  Making these changes should also render this module compatible with the MeasureRatios module, too, so we should then adjust the MeasureRatios module so you can choose these measures.

-(Anne was right) (Requested by Anne) - It would be nice if the Crop module would allow you to freehand draw a rectangle (rather than an ellipse) on each image as it cycles through. ANNE SAYS - I think we can already do this, by clicking points at the corners of the rectangle.

-(Mike 9/29) (Requested by Anne 8-24-05) - The help for the crop module is out of date. The variable descriptions should tell the user that they can enter 'end' (or maybe it should be 'last') instead of a numerical value for the pixel position if they don't want to crop the bottom or right edges.  Also, for the 'Number of pixels from edge' option, the popup window isn't custom so you can't enter a number.

-(Mike 9/29) (Requested by Anne) - It would be nice to allow CellProfiler to be used by different people and each one could have their own user preferences.  Right now preferences can be saved (File > Save preferences), but we should allow the user to choose whether to save these preferences as the default preferences (in CellProfilerPreferences.mat), or alternately, to name the preferences file something unique (e.g. AnneCellProfilerPreferences.mat). Then the user could load their preferences by using: File > Load preferences.

-(Mike 9/29) (Requested by Anne) - When Saving a pipeline, after you confirm the filename change (adding PIPE to the name), it asks if you want to save the pipeline as a text file. If you click yes but then cancel at this stage, you don't get the dialog box confirming that the pipeline file itself was saved. I guess the best thing to do is after confirming the filename of the pipeline itself, the confirmation window should appear that it was saved and a separate confirmation window should appear if you save as a text file.  Also, in all of the dialog boxes relating to this function, we should refer to the 'settings' as 'pipeline' instead, to be consistent.  Also, we should check whether PIPE is already part of the name and if so, do not suggest adding PIPE again!

-(Mike 9/28) (Requested by Anne 8-24-05) - The FilterObjectsAreaShape window should have the bottom left and top right displays switched in their positions (the final filtered image should be in the top right and the outlines on input image should be at the lower right.)(DONE)  Why is there an input image for this module?  Is it only for showing the outlines on the original image? If that is the case, it should be made optional. FilterObjectsAreaShape needs full documentation and to be made to look like all the other modules, and it needs its method for saving outlines and colored images to be consistent with other modules (like IdentifyPrimAutomatic).  I think we also need a FilterObjectsIntensity and FilterObjectsTexture module (the last one is probably not going to be used much, but it's just to be complete).

-(Mike 9/28) (Requested by Anne 09-08-05) - Adapt the code for IdentifyPrimAutomatic according to Ola's advice, in order to tell the user the number of merged objects (once calculated as below, the number should be recorded in the handles.Measurements - probably in the Image substructure, since there will be only one measurement per image - and also shown in the figure display window):
OLD>
%%% Merge small objects
if strcmp(MergeChoice,'Yes')
  Objects = MergeObjects(Objects,OrigImage,[MinDiameter MaxDiameter]);
end

SUGGESTED NEW>
%%% Merge small objects
NumberOfObjectsBeforeMerge = max(Objects(:));
if strcmp(MergeChoice,'Yes')
  Objects = MergeObjects(Objects,OrigImage,[MinDiameter MaxDiameter]);
end
NumberOfObjectsAfterMerge = max(Objects(:));
NumberOfMergedObjects = NumberOfObjectsBeforeMerge-NumberOfObjectsAfterMerge;

-(Mike 9/26) (Requested by Anne 9-26-05) - The Load Text figure display currently doesn't show anything. It would be nice to have it show the text that has been loaded  with a scroll bar. I think we have a CP subfunction for showing a text display figure - CPshowtext or somethign like that?

-(Mike 9/26) (Requested by Anne) - Add background masking to the identify sec distance module
       (make it optional in case a cell stain image is not
       available). 

-(Mike 9/26) Add ray's new adjustment to SecProp function for secondary distance

-(Mike 9/26) (Requested by Anne 9-23-05) - Make the File > save current cellprfoiler code ignore .svn directories.  There was one in the Modules directory.

-(Mike 9/26) (Requested by Anne 9-21-05) - Combine ExpandOrShrinkPrim and ExpandOrShrinkSec.

-(Mike 9/23) (Requested by Anne 09-21-05) - There is a bug in the MeasureCorrelation module when the settings are: OrigBlue, OrigGreen, within Nuclei. (i.e. not within Image). It produces an output file with the correct fields in the handles.Measurements.Nuclei structure, but an extra, incorrect field (CorrelationFeatures) in the handles.Measurements.Image structure for some reason:
>> handles.Measurements.Nuclei
ans = 
       LocationFeatures: {'CenterX'  'CenterY'}
               Location: {[282x2 double]  [860x2 double]}
    CorrelationFeatures: {'Correlation OrigBlue and OrigGreen'}
            Correlation: {[282x1 double]  [860x1 double]}

>> handles.Measurements.Image
ans = 
          FileNamesText: {'Filename OrigBlue'  'Filename OrigGreen'}
              FileNames: {{1x2 cell}  {1x2 cell}}
          PathNamesText: {'Path OrigBlue'  'Path OrigGreen'}
              PathNames: {{1x2 cell}  {1x2 cell}}
      ThresholdFeatures: {'Threshold Nuclei'  'Threshold Cells'}
              Threshold: {[0.0392 0.0409]  [0.0524 0.0568]}
    ObjectCountFeatures: {'ObjectCount Nuclei'  'ObjectCount Cells'}
            ObjectCount: {[282 282]  [860 860]}
    CorrelationFeatures: {'Correlation OrigBlue and OrigGreen'}
            TimeElapsed: {[75.9895]  [214.3913]}

-(Mike 9/23) (Requested by Anne) - RenameOrRenumberFile behaves weirdly when trying to rename and renumber.  For example, for the file IMG_0760.JPG I tried these settings: # characters beginning = 4, # characters at end = 4, any text to add = /, characters for renumbering = 5.  I expected this to yield IMG_00760.JPG, but instead it yields: IMG_00000.JPG  Likewise, # characters for renumbering = 3 should yield IMG_760.JPG but instead it yields IMG_000.JPG.

-(Mike 9/23) (Requested by Anne 8-25-05) - Is the module "PlaceAdjacent" something that we can combine with "Tile"?  I guess maybe not, because PlaceAdjacent is designed to take in two different images (e.g. OrigBlue and OrigGreen) (although perhaps we can expand it to allow up to 6 images being side by side) whereas Tile is designed to take all the images of a particular type (e.g. all the OrigBlue images) and tile them.  Not sure if it is reasonable to combine these two - I guess it depends on what the variables are and how confusing they become.

-(Mike 9/22) (Requested by Anne 09-21-05) - The MeasureImageIntensity module does not store the image name with the measurement, so if you put multiple modules in a row measuring the intensity of different images, the early ones are overwritten.  Here's how the measurements look from the MeasureImageIntensity module....
handles.Measurements.Image:
    IntensityFeatures: {'Total intensity'  'Mean intensity'  'Total area'}
            Intensity: {[4.0181e+04 0.0399 1006000]}

I think we should change the module to be more like the MeasureObjectIntensity module, where we include the image type (e.g. 'OrigBlue' in the feature name), like this...
handles.Measurements.Nuclei:
   Intensity_OrigBlueFeatures: {1x11 cell}
            Intensity_OrigBlue: {[282x11 double]}

This will also make the module compatible with the MeasureRatios module.

-(Mike 9/20) ImageIntensity not working at the moment

-(Mike 9/20) Measure modules (AreaShape) should be able to handle 7 objects

-(Mike 9/20) Fix bugs with removing module from pipeline

-(Mike 9/19) (Requested by Anne 9-08-05) - ClassifyObjects is able to classify cells based on a ratio calculated with the MeasureRatios module. Anne has an example pipeline (temp17PIPE.mat for BioImage images) that shows how it's done, but it's a little hacked together and the module is not documented well to explain how this would be done.  

-(Mike 9/19) (Requested by Anne 8-23-05) - LoadMoviesText doesn't work when loading two .stk movie files - it fails at line 456, looking for 'FileNames'. Doublecheck that LoadMovies Order works too.  ---> UPDATE: Anne fixed the bug very quickly in LoadMoviesText new revision: 1.17; previous revision: 1.16. You can see the changes that were made by diffing those two revisions. Make sure that LoadMoviesOrder works and if not, hopefully those bug fixes in LoadMoviesText will show you what to do to repair LoadMoviesOrder. 

-(Mike 9/19) (Requested by Anne 09-08-05) - I helped someone setup CP on a PC (Windows XP, with Matlab 7.04.365 SP2 R14) and ran into a couple of bugs. Not sure if they will reproduce but can you check on them:
DONE * I'm not sure the timer units were accurate - it said it was taking 1 second per image set but it seemed more like 5-10 seconds. Is there some weird conversion?  Also, for the popup window at the end which tells us the breakdown for the entire set that was processed, each module's avg time is listed in seconds but no units were listed for the first image set or whatever else is listed at the top. Perhaps these issues were because we 'canceled after cycle' partway through, so the calculations were based on the total number of image sets rather than the number we actually processed?
DONE * The slider in the main GUI, when there are lots of variables, was backwards!  I thought this was fixed - I remember it seemed to be backwards depending on whether you're using PC vs Mac, but I thought it was working fine on your PC recently. i wonder if it's an XP issue?
* Not a bug, but on his computer it takes forever every time the code has to look up the list of images in the selected directory.  Can you make sure we aren't doing this redundantly?  I know we check through all the files when you choose the directory in the main GUI (so it's displayed in the list box), and then we check through the files when you click analyze images to make sure the file list hasn't changed (in case you moved files in the meantime), but i wonder if also the load images module is checking through things unnecessarily.  You might want to doublecheck any changes with me since this is a critical thing!
DONE * We had trouble with ExportData data tool when trying to export his data that had Image and Cells data (e.g. it had Load, IdentifyPrimAuto, and MeasureObjectsAreaShape) - the Cells excel file seemed fine, but the Image one failed because one of the first columns is 'pathname' which on the PCC has backslashes, but these are read funny in excel as column breaks.  We also got the command line error in matlab:
Export Data > Write Measurements in line 378
Export Data at line 75
See help for sprintf for valid escape sequences.

-(Mike 9/19 NEEDS TO BE TESTED) (Requested by Anne) - Combine Load Images and Movies (including Order & Text versions) into a single module.(I think this would be great, but maybe there are compelling reasons not to do it).  At the moment, the code which determines which files in the image directory are shown in the list box in the main CP GUI is weeding out movie file types, I think.  Also, the LoadImagesText module lists only 6 file formats that can be read. This list of file formats that appears in its popupmenu should be retrieved from CPimread - but maybe it's not possible because that requires running code rather than just extracting text. If that's the case, I guess we just have to type them into this module manually and update them whenever Matlab updates its imread function (which probably isn't that often anyway). Also, right now we ask the user for the file format of their images but this information is not actually used anywhere. We need to adjust the CPimread function to take in and use a file format (it should be optional; only used when images do not have file extensions).  Also, sometimes we might want to sort images by order but also by text, or sort by two different bits of text - like only wanting to retrieve images with the proper extension. So perhaps we should use the File format input in another way (besides using it for imread when there is no extension): do you only want to consider files with that extension?  That would be nice because it prevents you from having to exclude .mat files or other types of files in the folder.

-(Mike 9/19 CHANGED TO DOC FILE SINCE OPENING ON MAC ADDS FORMATTING WHICH CAN'T BE READ FROM .TXT FILE ON PC) (Requested by Anne 9-16-05) - why are there two SVNcommands.txt files now? can someone check the log and see who committed the new misspelled one?

-(Mike 9/19) (Requested by Anne) - Can IdentifyLaplacianOfGaussian (RgSmartDilate??) be merged into IdentifyPrimAutomatic?

-(Colin 9/15) - (Requested by Anne) - Make the DefineGrid module use the usual colormap for labeling its objects in the display.  By the way, should we have a CPcolormap function, if we decide to use that fix that Ola wrote (and that you edited?). Then someone could set it as their preferences and it would affect all the modules' colormaps.

-(Colin 9/15) - (Requested by Anne) - Put in the help menus for ImageTools and DataTools.

-(Mike 9/15 MOVED TO OUTDATED, DILATEBINARYOBJECTS HAS SAME FUNCTION AS EXPANDORSHRINK) (Requested by Anne 8-25-05) - Can DilateBinaryObjects be combined with ExpandOrShrinkPrim or ExpandOrShrinkSec?

-(Mike 9/15) (Requested by Anne 09-06-05) - MeasureRatios needs to be much more sophisticated. Right now it has CorrGreen and CorrBlue and CorrRed hard-coded in. It isn't flexible for different types of measures, is it? (AreaShape, Intensity, texture)

-(Mike 9/15) Also, Make sure there's an error check in MeasureRatios that catches if the incoming objects (or 'image') do not have the same number of objects, e.g. they try to divide a whole image measurement by a nucleus measurement, or they try to divide nuclei/cytoplasm but there's a slightly different number of those objects in the image.

-(Mike 9/14) (Reported by Serge Pelet 09-02-05) - he was working with an old version, so i am not sure if it's still a problem, and the line numbers may not match up:  MakeProjection_averageImage.m
(1) line 162:  [ProjectionImage, ReadyFlag] = CPaverageimages(handles, 'DoNow', ImageName, 'ignore');
has to be changed to  [handles, ProjectionImage, ReadyFlag] = CPaverageimages(handles, 'DoNow', ImageName, 'ignore');
to work properly. the output argument do not match.
(2) Same problem at line 134 probably

-(Colin 9/14) (Requested by Anne 8-23-05) - Make IdentifyEasy use the user's preference for font size - right now it's hard coded to be 8.  Check through all other modules and tools - I think DataLayout tool is also using a hard coded font size.

-(Mike 9/13) (Requested by Anne 09-08-05) - Can IllumCorrect Calculate using Intensities be combined with Background intensities?

-(Mike 9/13) (Requested by Anne 9-08-05) - MeasureRatios creates very long fieldnames in the handles.Measurements structure. Is there any way we can reduce the length?

**-(CAN BE DONE BUT TAKES A LONG TIME) (Requested by Anne) - Adapt the Crop module to take in an object (ie. the plate) identified by one of the identify modules and crop based on that object (anything outside the object is cropped away). This will be used to Crop away yeast agar plates.

-(Mike 9/12) (Requested by Anne 9-08-05) - The MeasureObjectIntensity module should show which image it is measuring (e.g. OrigBlue) in the window title somewhere.  Make sure MeasureObjectTexture does this too.

-(Mike 9/12) (Requested by Anne 9-08-05) - We want the MeasureCorrelation module to be able to measure the overall correlation between the two images, for the entire image itself (not just correlation within objects). I am pretty sure the code is able to do this, but it's not clear how to make it happen - do you have to leave one of the variables set to 'Do not use', or type in 'image' instead of choosing an object from the list?  We need to update the variable description to explain this, and possibly we need to adjust the variable popup menus to allow it.

-(Colin 9/12) - (Requested by Anne 09-01-05) - When we ran a pipeline that contained IdentifyPrimAUtomatic and SecPropagate and Tertiary Subregions, we ended up with an unanticipated field in the handles structure: handles.PipelineObjectOutlines
It seems like this ought to have been something like: handles.Pipeline.NucleiOutlines or something??

-(Mike 9/12 THIS WAS RAY'S FIX FOR DISTANCE) (Requested by Anne 9-08-05) - It looks like someone committed changes to the IdentifySec subfunctions... was this unintentional? I wonder if these needed to be SVN added in binary format rather than regular ASCII. Also, if it's feasible, we could rename the Sec subfunction to match the module's name 'IdentifySecondary'.

-(Mike 9/12) (Requested by Anne 9-08-05) - SVN remove CVScommands (I already added it to the Outdated folder).

-(Mike 9/12) (Requested by Anne 9-08-05) - The standard error message says error in module N, but it doesn't tell us the name of the module. Can we have the name of the module included in the error message? When there's > 10 modules it gets tough to count and find which one generated the error.  Also, it would be really really great if these error catchings could tell us what line number the error occurred on.  I think this is something we've tried before and couldn't figure out, though.

-(Mike 9/12) (Requested by Anne 9-08-05) - Can we have the image set number displayed for every figure window?  Rather than adding it as a title for each individual figure, perhaps we could have it be part of the window bar (where it says Figure 9: ClassifyObjects can we change it to Figure 9: ClassifyObjects, image set #3?)

-(Mike 9/12) (Requested by Anne 9-08-05) - LoadSingleImage produced a long box and browse button for the first image specified but not the subsequent image types.

-(Mike 9/12) (Requested by Anne 9-08-05) - There's a typo in ClassifyObjects - according is accoring.

-(Mike 9/12) (Requested by Anne 9-08-05) - Can you check the Tif image files now that we have SVN set up and see if they look OK on the PC (and haven't been mangled by conversion to binary or whatever)?  Also, the .mat files.  Susan will be updating the ExampleXXXSettings.mat files to the newest version of code, but you should at least see that matlab can read the files.

- (Susan 9/9)(Requested by Anne 9-08-05) - Change the name from SVNcommands to SVNcommands.txt 

- (Susan 9/9)(Requested by Anne 09-08-05) - Please adapt the four pipelines which are in trunk/CellProfiler/ExampleImages (each folder has an example pipeline) to the current code and once they are repaired and load smoothly, commit them to SVN and generate new Output files and commit them to SVN too.  This might involve changing some module names and moving variable names around, as you have done previously. 

-(Mike 9/9) (Requested by Anne 9-08-05) - there still seems to be a lingering bug in object groups... I think it happens when I set up a pipeline (e.g. with  Nuclei being identified and then measured) and then at the last minute change the name Nuclei to Nuclei2. In subsequent modules that make use of that object, the name automatically updates to Nuclei2 but when I run the pipeline the subsequent module goes looking for Nuclei, not Nuclei2.

-(Mike 9/9) (Requested by Anne 9-08-05) - In ClassifyObjects, I get strange results in the histogram - I think the data is probably right, it's just displayed strangely. Test it with the lower bin set below the lowest actual measurement, but with the upper bin edge set to be somewhere where about half the measurements will be excluded because they are too high. Now set p:NN  where NN is a value where about half the objects are higher and half lower. I tested it where the actual values ranged from 0 to 2000 and I set the cutoff to p:300. The histogram showed two bars, stretching from 0 to 300 and from 300 to 600. I would have expected it to be 0 to 300 and 300 to 2000, but maybe that's just how the display looks.

-(Mike 9/9) (Requested by Anne 9-08-05) - I hacked together a quick fix for the MeasureCorrelation module to allow it to measure the correlation of the images overall, but apparently there's something wrong in the code - the module doesn't fail or error out, but the measurements it produces are not the right 'shape': for each combination of incoming images (e.g. green+blue) it should produce one number per image, and the measurement should go in handles.Measurements.Image, like:
handles.Measurements.Image.CorrelationFeatures = {'Red_Blue','Red_Green',Green_Blue'}
handles.Measurements.Image.Correlation = {[.2 .4 .6], [.4 .5 .1]}
(for three color combinations and two image sets)
Or something like that - check other measurements that end up in the Image substructure and make sure that this module matches those.  The way the code is currently, there are a few hundred numbers for each image!

-(Colin 9/9) - (Requested by Anne 09-02-05) - it looks like you invented a new 'filenameVAR' to enter filenames - have we incorporated this into any modules yet? We could put it in LoadSingleImage if you want. 

-(Colin 9/9) (Requested by Anne 09-08-05) - I think we still want to increase the size of the text boxes that say default image folder and default output folder. All the other text looks great on my computer, except that those are missing the word 'folder' because the box isn't quite wide enough.

- (Colin 9/9) (Requested by Anne 09-08-05) - Can you check that the zipping function works now on the mac? Mike just fixed it and i want to doublecheck that if you do File > Save current CP code that the zipped archive contains everything we need to run CP.

===-(Mike 9/8) (Requested by Anne 8-23-05) - Make the ApplyThresholdAndShift an option within ApplyThreshold. Give the new combined module sophisticated options for automatic thresholding (see IdentifyPrimAutomatic for thresholding code).  I think this will also replace the functionality of SubtractBackground.

===-(Mike 9/8) (Requested by Anne) - Combine RGBsplit and RGBtoGray into a single module - that is, with the two methods (split or combine) being options within a single module. Call the resulting module RGBtoGray and move RGBSplit to Outdated.

-(Mike 9/8) (Requested by Anne 09-07-05) - For the IdentifySecondary module, I think that if you choose Distance, no images are needed as an input, so the variable description should change to reflect that an image selected there only affects the display and not the object identification itself. 

-(Mike 9/8) (Requested by Anne 09-07-05) - Don't forget to move the outdated IdentifySec modules to the Outdated folder. 

-(Mike 9/8) (Requested by Anne) - Combine all IdentifySec options into one module.

-(Mike 9/8) (Requested by Anne 09-07-05) - Can you rename all text files (the TODO's and some DeveloperScript files) by adding .txt to the names?  I think SVN allows us to do this in a smart way (whereas CVS required adding and deleting).

===-(Mike 9/7) (Requested by Anne 09-01-05) - If loading an old pipeline fails dramatically (e.g. because a module no longer exists), right now things just kind of stall, and then there are loose variables left in the handles.Settings and the pipeline list box shows 'loading...'. If possible,  if something goes wrong during pipeline loading can we make sure handles.Settings is cleared out and the 'loading...' is cleared away?

-(Mike 9/7) (Reported by Serge Pelet 09-02-05) - he was working with an old version, so i am not sure if it's still a problem, and the line numbers may not match up:   CPretrieveMediaFileNames.m
line 27 change  MediaExtensions = [MediaExtensions, 'avi', 'stk']; 
to
MediaExtensions = [MediaExtensions {'avi'}, {'stk'}]; to preserve the cell class
This gave a bug on my Mac when I started CP but didn't cause any problem on a widows machine, strange!

-(Mike 9/6) (Requested by Anne) - Move the help contents of IdentifySecPropagateSubfunction to the help for 
 IdentifySecPropagate and then remove IdentifySecPropagateSubfunction.m from cvs (i.e. delete it), because it contains no code but appears as a module to load in the pipeline when you click the AddModule button.

-(Mike 9/6) (Requested by Anne 09-01-05) - When loading from a saved pipeline and a module doesn't exist anymore, a warndlg pops up but is then covered up by the variable revision assisting window. The text from the warndlg box should be displayed in the variable assist window (which normally says something about revision numbers not matching), and just say "Module XXX can't be loaded, but you can at least see the saved settings below. The pipeline will not load properly and probably all of CellProfiler's settings are corrupt so you should shut it down before attempting to load or build a new pipeline".

-(Mike 9/6) (Requested by Anne 09-01-05) - When we load from an old saved pipeline (e.g. the SecPropagate module) and the Variable Revision number is now newer, we go through the helper window that assists us in choosing saved or default variables. It's kind of strange though because there are blank spaces for default variables that make use of popup menus. These should display *something*, like "Image must be chosen from pipeline" if it's an imagegroup popup menu, for example.

-(Mike 9/2) (Requested by Anne) - make sure all modules have a Variable revision number, because otherwise we have to confirm it upon loading pipelines every time we use that module.
NOTE: THIS SHOULD BE CHECKED FOR ALL NEW MODULES BEING CREATED

-(Mike 9/2) When loading a module whose variable revision number has changed, many of the variables come up as blank in the window where you choose between Saved and Default.

-(Mike 9/2) (Requested by Anne) - SaveImages is not actually checking to prevent overwriting existing images, even when you have the variable set to doublecheck.

(Joy 9/1) - (Requested by Anne) - When Saving a pipeline, after you confirm the filename change (adding PIPE to the name), it asks if you want to save the pipeline as a text file. If you click yes but then cancel at this stage, you don't get the dialog box confirming that the pipeline file itself was saved. I guess the best thing to do is after confirming the filename of the pipeline itself, the confirmation window should appear that it was saved and a separate confirmation window should appear if you save as a text file.  Also, in all of the dialog boxes relating to this function, we should refer to the 'settings' as 'pipeline' instead, to be consistent.  Also, we should check whether PIPE is already part of the name and if so, do not suggest adding PIPE again!

-(Joy 9/1) - (Requested by Anne 8-23-05) - The Histogram DataTool spits out the value "Suffix" at the command line in the first few steps of using the tool.

-(Colin 9/1) - (Requested by Anne 9-01-05) - There is a bit of a bug with the new 'long box' fix that has the edit box plus the browse button. I end up with browse buttons floating in the wrong place. The pipeline in the drop box called temp3PIPE.mat should reproduce the problem - look in the SaveImages module and there should be a browse button displayed on top of the 4th variable.

-(Colin 9/1) - (Requested by Anne) - In several places there is text information entered as a variable description that does not need a corresponding variable box (see SaveImages for an example). A box with the text 'n/a' appears next to these variable descriptions that is unnecessary.  This seems odd - can we make it so the variable box doesn't appear if it is n/a?  I think maybe the reason it is done this way is to be sure that if you scroll down using the slider this extra text information is displayed properly.


-(Mike 8/31) (Requested by Anne) - There is a general popupmenu bug: for example, in ImageTiler, if I load this module after loading other modules (like SaveImages) and leave the default "TiledImage" as it is, this 'TiledImage' option does not automatically show up in the SaveImages module as an image I can choose. The workaround is simply to click on the TiledImage text in the  ImageTiler module. This refreshes the popup menu in the saveimages module so that the TiledImage can now be selected. Another popupmenu bug: To reproduce, first add for example IdentifyPrimIntensIntens to the pipeline, close the add module window, and then add for example the LoadImagesText module. Move the LoadImagesText module to the top. Now it is still not possible to choose an input image in the IdentifyPrimIntensIntens module. This problem might have the same root case.


-(Colin 8/31) - (Requested by Anne 8-30-05) - Hey Colin - can we add ImageTools to the main GUI interface (next to DataTools), please? I find it useful for ShowDataOnImage, which doesn't depend on being run from a particular figure window.  Or, we could just make ShowDataOnImage be a DataTool.

-(Mike 8/30) (Requested by Anne) - variable bug: for IdentifyPrimIntenIntens (and possibly other modules), there is a problem with the variable - what do you want to call the labeled matrix image?  Typing in a custom entry using the 'Other...' option yields an error. See that module for more details on the error produced.  Perhaps we decided that this bug is not worth fixing, in which case remove the comments there and convert any other similar situations in other modules so that this error does not occur.  Note: We have replaced IdentifyPrimIntenIntens with IdentifyEasy recently. We still want to fix the problem because a similar thing occurs in IdentifyEasy but you will still want to take a look at the code in IdentifyPrimIntenIntens because the bug is described in detail in there (see Outdated folder).

-(Colin 8/30) - (Requested by Anne) - It used to work that if we added "LongBox" to the end of a variable description, a long edit box would be shown. Also, if the text contained within an edit box outgrew a small edit box (e.g. more than 20 characters I think), then a long edit box would be shown so all the text is visible.  With the changes associated with the new popupmenus, etc., we lost this functionality. Most, or maybe all, of the instances where we used LongBox  was to input a path name. In these cases, it would be very nice to instead have a browse button and a long edit box to help the user choose or type in a path.  This would involve creating a new variableinfotype.  This does not, however, take care of the other usage of long edit boxes: so we also need to adjust the popupmenus and small edit boxes so that if their contents become too long, the popupmenus or small edit boxes drop down to the next line and become long.

-(Colin 8/30) - (Requested by Anne) - For the interactive zoom part of CPfigure, it seems there's no way to turn it off. (the tool itself works fine). It'd be nice to click the 'Interactive Zoom' text on the menu and have it turn off and the little X Y indicator go away. Also, clicking the 'X' to close the XY indicator yields an error.

-(Colin 8/29) - (Requested by Anne) - In several places there is text information entered as a variable description that does not need a corresponding variable box (see SaveImages for an example). A box with the text 'n/a' appears next to these variable descriptions that is unnecessary.  This seems odd - can we make it so the variable box doesn't appear if it is n/a?  I think maybe the reason it is done this way is to be sure that if you scroll down using the slider this extra text information is displayed properly.

-(Mike 8/29) (Requested by Anne) - Variable bug: To reproduce, make a pipeline of LoadImagesText, then IdentifyPrimIntensIntens, then MeasureAreaShape. In MeasureAreaShape, choose Cells in the first slot. Then go to Identify module and change the objects to be identified from Cells to Nuclei. When returning to MeasureAreaShape, you will see that what was previously set to Cells has automatically changed to Nuclei. In my view, this is unanticipated behavior and should not happen. It ought to stay set to Cells until you change it (even though Cells will not exist and the pipeline will fail, at least it is the user's fault and they can figure out the problem).  The worse problem (other than it being unanticipated) is that when you actually run the pipeline, the MeasureAreaShape module still goes looking for Cells rather than Nuclei, so it fails. This part of the error can be prevented by going to MeasureAreaShape and re-selected Nuclei, even though that is the option that's already chosen. So, re-selecting it seems to embed the proper choice into the handles.

-(Colin 8/29) - (Requested by Anne 8-26-05) - it looks like we have a slight peek-through problem - I noticed it on the Crop module that it's showing up behind the default image directory edit box.  Also, change 'Directory' to 'folder' in the main GUI.

-(Mike 8/26) (Requested by Anne) - On the windows machines that Stephanie & Monica & Winston use over at CSAIL, the windows appear off the top of the screen for some reason. It was only a problem for the Identify modules and RGB Split module but not Crop and Measure modules.  I've no idea whether it's related to the CPFixAspectRatio function (based on the 4 modules I checked there is a correlation, but it's not definitive). We should figure out what the point of CPFixAspectRatio is and document its code with some help to describe it.  We may also need to incorporate it throughout the code - some modules use it and others don't, so we ought to make things consistent.  Also (a separate issue, i think), error/help box text didn't fit in their windows and so was not visible. 

- (Requested by Anne) - cvs remove Profiler for Anne folder from the DeveloperDropBox. removing a directory requires a special procedure - i don't know how.

-(Mike 8/26)  (Requested by Anne) - Remove all Programming notes from each module and instead we will just have the one Help file of programming notes.

-(Mike 8/25)  (Requested by Anne) - Go through the code looking for uses of the command 'label2rgb' and change it to look like this (pre-calculates a colormap instead of just using the jet colormap):\
    %%% This method of calculating a colormap to use prevented some\
    %%% errors relating to colormaps. For one thing, the label2rgb\
    %%% function fails if there are no objects in the label matrix\
    %%% image. Also, there is a bug for some of the colormaps that\
    %%% fails when there are only 1 or 2 objects in the image, I\
    %%% think.\
    cmap = jet(max(64,max(Objects(:))));\
    im = label2rgb(Objects, cmap, 'k', 'shuffle');\

-(Colin + Mike 8/24) (Requested by Anne 8-22-05) - For IdentifyEasy, add a variable "Do you want to run in test mode to see the results of all the intensity/distance options?" which will run all combinations of options and show the results in a single large window to help the user choose among the options.  I particularly want to see these results and show them to Ola before he leaves for Germany to make sure they are giving the results he expects.}

-(Colin 8/24) - (Requested by Anne) - SpotIdentifier needs to be polished up - see the help of that file for a few things we wanted to do or check. Some of these items may be done already.

-(Colin 8/24) - (Requested by Anne) - IdentifyWellSpots needs to be polished up - it needs more help text, the boilerplate etc, and it needs to be made just like the other Identify modules in terms of the various things that end up stored in the handles structure.  Also, we need a way to have the module figure out if there is no good way to line up the identified spots; if the settings are weird (e.g. I type in an 8 x 11 grid when the image actually has an 8 x 12 grid), I get errors but they aren't explained very well. (e.g. Non-finite endpoints or increment for colon operator in index).

-(Colin 8/24) _ (Requested by Anne) - It's a bit complicated but I'd like to combine IdentifyWellSpots (automatic version) and SpotIdentifier (manual version) into a single module (to be called IdentifyPrimGrid?). 

-(Colin 8/24) -- (Requested by Anne) - Once all these changes are done (removing the text data and the image rotation from SpotID'er), then we want to combine IdentifyWellSpots and SpotIdentifier into a single module: IdentifyGridOfObjects.  Here's what the variables ought to be (you'll need to change the syntax for a lot of them because I cut & pasted them):

-(Mike 8/24) (Requested by Anne) - The crop module seems to fail for RGB images at the moment.

-(Mike 8/24) (Requested by Anne) - For the File > snapshot of CP files, don't have it archive the CVS folders or any files preceded by a dot (hidden files).

-(Mike 8/24) (Requested by Anne) - Make this information available via a "?" button in the Add Module selection window next to the "Object Identification" header:\
% Identify Primary modules identify objects without relying on any\
% information other than a single grayscale input image (e.g. nuclei\
% are typically primary objects). Identify Secondary modules require a\
% grayscale image plus an image where primary objects have already\
% been identified, because the secondary objects' locations are\
% determined in part based on the primary objects (e.g. cells can be\
% secondary objects). Identify Tertiary modules require images where\
% two sets of objects have already been identified (e.g. nuclei and\
% cell regions are used to define the cytoplasm objects, which are\
% tertiary objects).\

-(Mike 8/23) (Requested by Anne) - Improve the window that appears at the end of an analysis run: Right now it prints the time elapsed for every cycle, which is almost always way too much info to fit in the window. So four columns: [Module name  |  Time for first cycle  | Time for last cycle | Average time for all other cycles], and then one row for each module in the pipeline.  Change the Timer to also display this information, using the term 'Cycle' rather than 'Image set'.  Also, have it convert to minutes or hours if it's reasonable instead of displaying in seconds all the time.

-(Mike 8/23) (Requested by Anne) - In the Add Module window, there is no directory listed next to the text "You are currently looking in". It's because the text wraps to two lines so we need to make that text box big enough to display two lines.

- (Colin 8/18) - Remove the code for rotating an image from the SpotIdentifier module and make it into a separate image processing module "RotateImage". There should be several methods to choose from in a popup menu:
1. Type in a set of pixel coordinates for two points that should be aligned horizontally.
2. Type in a set of pixel coordinates for two points that should be aligned vertically.
3. Click spots that should be aligned horizontally with mouse 
4. Click spots that should be aligned vertically with mouse 
5. Type in the rotation in units of degrees.
6. Automatic, based on identified objects - this would be a new, sophisticated option where identified objects that look like they're in a grid or some sort of lines would be rotated to be squared up to the image. Not sure if this is feasible, but it would be cool. We can make this a more long-term part of the project.
All of these options would be converted to a single number - degree of rotation - so the same code can then be used to actually rotate the image no matter which option was chosen.  This degree of rotation (or however you want to store it) should be saved in handles.Measurements.Image because it may be of interest to the user and also so that it can be retrieved in case you want to apply the rotation from the first image set to subsequent sets (see next option).

Another option - do you want the rotation for the first image to be applied to all image sets or do you want to determine the rotation for each image individually as you cycle through? 

Another option - do you want to crop away the rotated edges?  (Otherwise, the rotated edges with missing pixel information are just black pixels).

- (Colin 8/22) - (Requested by Anne) - We've lost the regular Matlab toolbar that shows up in figures - the one that has save, print, zoom, add text, etc. Can we add it back?

DONE BETWEEN  IAP 2005 and FALL 2005  (the oldest is towards the top in this list)  >>>>
-------------------
Done, I think - The error checking for "there are no images in this folder"
       should be moved out of CellProfiler.m and into the two Load
       Images modules, since some pipelines may not require images in
       order to run properly.
Done - - The confirmation window upon "cancel after image set" button clicking ought to say "confirm cancel", not "confirm close". 

Done (Anne) - Fix CreateBatchScripts, for the option of selecting the default module directory by entering "."  Things were changed recently to add CellProfiler and CellProfiler/Modules to the path, and I am not sure whether this option will still function.

Done (Anne) - In CellProfiler.m, look for lines marked: %%% TODO: Fix filename construction (I think also see lines pertaining to OutputFileOverwrite), and use a less platform-dependent way to construct the path/filenames (e.g. with Matlab's fullfile function), rather than using slashes.

Done (James and Anne) - Remove all 'cd' commands from modules and use full pathnames instead.  In particular, modules that need to look at all the images in a set (Load images, identifythreshold, correctillum, subtract background) typically change to the directory then read the images, whereas we could construct the image filename using fullfile(pathname,filename). (The reason for doing this is to prevent CellProfiler from unexpectedly changing the current directory in matlab.  However, if this method takes more processing time, perhaps we should not make this change).

Done (Anne, with Kyle writing the Help) - Load movies module, with ability to load each frame of a .avi file.  (Look at AvitoImageSlices.m)

- DONE, Delimiter was not functioning on anne's computer, but it seems to work now.- Allow the user to 'export' the current settings into some nice, person-readable text file so they have a permanent record. 

DONE (Anne - SpeedUpCellProfiler module): - Change saving of the output file to be faster for large jobs -> tell the user they can change CP.m code to save only if handles.Current.SetBeingAnalyzed is a multiple of 5 or 10 or whatever, rather than saving after every image set.

Steve Lowe fixed the following:
2/25/05
- Help function does not work for ImageTools and DataTools; The menu often doesn't return to the default first position ('DataTools' or 'ImageTools') after running a tool.
First problem was a partially deleted string defining okcallback. Second problem may have been fixed by someone else, seems to work ok.

3/08/05
Fixed title bar label for Data Tools Help (previously said Image Tools Help).

Changed Image and Data Tools Help windows so that double clicking in list box will display help for the tool, same as clicking OK button.

In PlotOrExportHistograms, fixed problem that filenames containing underscores were not displayed properly as histogram titles (displayed succeeding character as subscript).

3/15/05

- Improve the Data tool "PlotOrExportHistograms":
*Make the dialog box that asks for input from the user (~13 questions) wider.
*When filenames have underscores and these filenames are used to label each histogram in the display, the underscores cause the following text to be subscripted. We fixed this somewhere else in the code at one point by doing a string replacement of underscores with some symbol that prevents the underscore from being read as a string modifier. 
*Flip rows vs columns for exporting the raw histogram data, so that columns are histogram bins and rows are images. Now have option to display in either orientation.
* Update help for this tool.

4/12/05 and 4/15/05
- Created new module IdentifyPrimLaplacianOfGaussian. Functions, but need to verify that it is doing as well as Perlman and Mitcheson's work.
- Added ability to restart a partially completed run, using module Restart.m. TODO: small mods to 45 modules that check SetBeingAnalyzed == 1 and take some global action, some of these may need to be changed to SetBeingAnalyzed == StartingImageSet.
-Made "Close Windows" button work better by tagging figures that CellProfiler creates. Now every figure CP creates has UserData.Application = 'CellProfiler'. "Close Windows" button will delete figures from current and previous invocations of CP.
-ToolsHelpSubfunction: Now closes any existing ToolsHelpWindow because 'ok',
'cancel' callbacks could get confused and throw error if more than one.
-ToolsHelpSubfunction: Set toolsChoice=0 before uiwait to make behavior
correct if exit message box using clicking x instead of cancel.

4/22/05
Went through Modules and adjusted so they will work with Restart.m.

5/24/05 (Colin)
- Allow canceling from the first dialog box when using the Save Image As button.

5/24/05 (Colin)
- The help button does not work for OpenNewImageFile, ShowDataOnImage, AddData, and ClearData

5/24/05 (Joo Han) - Not committed yet, have pending questions.
- I just adapted ClassifyObjects into ClassifyObjectsIntensity, but probably we should combine the two. I wasn't sure how to look up which column of measurements is desired, so that's one definite improvement that ought to be made.  Also, the new version doesn't allow for marking/coloring which object is in which bin since it extracts the data from the handles structure rather than calculating it from a label matrix. Neither version allows anything other than three bins, so it would be nice to allow the user to enter a variable number of bins separated by commas.

5/24/05 (Joo Han)
- Updated help for OpenNewImageFile.m

5/26/05 (Colin)
- After renaming is complete, the list of image names does not update itself automatically

5/26/05 (Colin)
- CPtextdisplaybox scrolls faster


- Done (Joo Han) Figure out a way to let the user to launch CellProfiler without separately launching Matlab (Have Matlab be automatically launched).
                -for Windows: In the installation package, include the shortcut with the path set as: matlab.exe /r CellProfiler
                -for UNIX: In the installation package, include the shortcut with the path set as matlab.exe -r CellProfiler

*The changes below have been canceled and replaced by a new version. The help file for the new syntax will follow soon.

- Done (Joo Han) - Expanded the syntax for declaration of variable boxes and such using comments in modules.

- Done (Joo Han) Combined all the identifyprim modules (need to delete most comments?)

- Done (Joo Han) Wrote the help file for the expanded syntax. (Perhaps too long?)

- Done (Joo Han)	Combined all the load images modules into LoadImages.m, using the expanded syntax.
				Combined all the load movies modules into LoadMovies.m, using the expanded syntax.
				(It would be very simple to change the program so that either LoadImages or LoadMovies module is added to the pipeline by default when the program starts; however, this will result in some loss of flexibility. Perhaps we can have a feature in the GUI called "Frequently Used Modules" where the user can add certain modules with just one click?)
                *Shouldn't we also have a LoadSingleMovie feature? It will probably end up being the most used load movie method..

- Done (Joo Han) Replace OrigImageToBeAnalyzed or OriginalImage or whatever, with 'OrigImage' in all modules in order to make everything consistent.

- Done (Joo Han) Check through all modules and make sure none of them have any variable options that let you load or save images to/from the hard drive - this was archaic and is replaced by LoadImages and SaveImages modules. (Used ReplaceTextInModules and checked modules with more than 3 instances of 'hard drive' found.)

- Done (Joo Han) We have modified several built in matlab functions and produced new functions with the CP prefix (they are all in the main CellProfiler folder). It's unclear which lines we have modified, so use the Matlab tool 'FileComparison Report' to show how the modified functions differ from the original and mark those lines in the code with comments so that we are aware of the differences. *All are well documented. File Comparison Report fails to give meaningful comparison results sometimes due to inconsistency of order, so I went through the modules myself. Most of the CP modules had been modified to indicate that figures or msgboxes created belong to CellProfiler.

- Done (Joo Han) Add error checking to data-related buttons to determine whether
       the .mat file the user selected is a valid CellProfiler output
       file. AddData, ClearData, ConvertBatchFiles.m. Load pipeline already has error check built-in, and for other modules it seems more complicated.

- Done (Joo Han) A modification on the improved version of the comment syntax, to make the combined modules more readable. Refer to IdentifyPrimAdaptThreshold.m for the format.

- Done (Joo Han) Bug fixed for OpenNewImageFile.m where capital lettered image file extensions were not recognized.
 
- Done (Joo Han) When some of the data tools (e.g. Histogram) generate a figure, these figures do not contain information in their UserData to indicate that they are CellProfiler figures, so that the Close windows button in CellProfiler.m does not function on these windows. We should check through all the data tools and image tools and modules and be sure that all figures which are created have the proper userdata.  Perhaps actually we should rewrite the figure function to be CPfigure, which is basically a subfunction calling the figure function plus some lines that add the userdata.

- Done (Colin) Make the DIB cancel button work in CPimread.m > right now it gives a less straightforward error message when you choose cancel during an analysis run. I don't know how it responds during an ImageTool like OpenNewImageFile.m

- Done (Joo Han), in a different way. Despite numerous attempts, we have had trouble adding a panel/frame to the GUI (CellProfiler.fig file) so that variable descriptions don't peek through under the boxes at the bottom of the GUI, when loading a module with lots of variables. The problem is peculiar, because it seems that if we make the change and save the .fig file on a PC it works fine everywhere but on the mac platform suddenly there is a 5 minute delay - the first few times we tried it, the delay occurred upon loading up CellProfiler. Later, it would happen only when you actually try to run a pipeline.  Usually the problem would be fixed by making the changes on a mac rather than a pc, but the past few times we tried, even that doesn't help. It's worth trying again on a mac.  the reason it seems so peculiar may have to do with how the .fig and CellProfiler.m files interact - they seem to update each other in a magical way that gets disturbed if you aren't careful. Seems like a buggy Matlab issue.  If all else fails, we could add a frame 'manually' by writing code in CellProfiler.m that runs upon start up rather than trying to add the panel to the .fig file using GUIDE.

- Done (Steve Lowe) - Restart module. 'Start job midway' module, run image set #XXXX (allow putting in a bunch of comma-delimited numbers to allow random), every 50th.

+++ Done (Steve Lowe) Download code relating to Perlman, Mitchison, et al. Science
       2004 and make modules accordingly (Laplacian of Gaussian to
       identify nuclei)

- Done (Ola) Make the ColorClassifyObjects way cooler: (1) able to use any measurement calculated by other modules - retrieve any measurement from the handles structure (2) allow the user to enter any number of bins. (3) Allow user to choose the colors to display for each bin.  Right now, the module can only do three bins, with fixed colors, and it classifies based on Area only, which is calculated within the module rather than retrieved from the handles.Measurements.

- Done (Ola) - PlotMeasurement DataTool: allow displaying two parameters vs. each
       other in a scatter plot.

- Done (Colin) - Make a button/tool that creates a zipped archive of all the CellProfiler files (e.g. a 'snapshot' of the code that is currently being used). 

- Done (Joo Han) - Implement Log Thresholding by changing CPgraythresh. In Han tested different thresholding methods, and log thresholding seems to be most stable at the moment. Might need to add an option to log threshold or not.

- Done (Joo Han) - Enable the use of popup menus by adding new possible syntax in comments within modules, and - We would like to overhaul all modules that pass images from one to the next to use drop-down menus rather than the user typing in the image name, which will limit typos. This would be a major infrastructure change.

- Done (Joo Han) - Go through all the modules to use popup menus whenever applicable (except IdentifyPrimAdaptThreshold)

- Done (Joo Han) - Allow up/down for combined modules (e.g. IdentifyPrimAdaptThreshold)

- Done (Joo Han) - Fix the scrolling method so that a variable description always becomes visible only after the corresponding variable box becomes visible, instead of just looking at the location.

- Done (Joo Han) - Make a "CreateWebPage" module that takes in original images, small thumbnail versions of the images (e.g. made with the ResizeImages module), and a filename that you want to call the html file.  The module should then write a text html file with code something like this:
<A HREF= origfilename.jpg><IMG SRC = thumbnailfilename.jpg>
</A> <BR>
Check to be sure that it works with subdirectories, so that one html file is produced per subdirectory.

- Done (Colin) - Make a button/tool that creates a zipped archive of all the CellProfiler files (e.g. a 'snapshot' of the code that is currently being used). 

- Done (Colin) - In the SetPreferences button, fix the code for when the user does not have write access to the matlab root directory. There is a nice routine almost functional there, but it doesn't quite seem to do the right thing: try to write in matlab root first, and if that fails, write in the handles.Current.StartupDirectory) > Also, maybe we should change it so that the current directory it tries to write to is the handles.Current.default output directory, since presumably the user can write there.  That is where CellProfiler should look when trying to load the preferences upon launching, too, if we add this feature.

- Done (Colin) - In the SetPreferences button in CellProfiler.m, do some error checking to see whether items entered in edit boxes are valid.  For directories, check whether the directory exists and warn the user if it does not (although, still let the nonexistent directory be saved, because perhaps they are not connected to the network or something). For the default output directory, check whether the user has write permission to that directory and warn if not.  For the pixel size and font size, check whether the entry is a number (though I think it needs to be stored as a string within a cell) and revert to the previously saved value if it is not a number.

- Done (Joo Han) - Change Save Images as to be compatible with CreateWebPage - in order to do this, it needs to update the filenames after it saves them. In case there are any trouble caused by this, also add a option where the user can choose not to update filenames within CellProfiler.

- Done (Joo Han) - WriteSQL.m should enforce itself being the last module in the
pipeline, like CreateBatchScripts does (or second to last, if
CreateBatchScripts is last).

- Done (Joo Han) - For the SaveImageAs Imagetool, allow saving the data in the image as a variable called 'Image',  in .mat format.

- Done (Joo Han) - When attempting to Export data using any of the various
       data tools, add an error check in case the mat file does not
       contain the field "Measurements".

- Done (Joo Han) - When clicking on a module in the list box whose .m file no longer exists in the Modules directory, an error pops up saying the module no longer exists but that the settings will be shown anyway.  The settings are *not* shown in the window, because an error appears in the command window - undefined variable "flagExist" at line 1066.
Error in ==> CellProfiler>ModulePipelineListBox_Callback at 1062
  if ( ( length(VariableValuesString) > 13) | (flagExist))

- Done (Joo Han) - CellProfiler.m keeps track of time elapsed, broken down for each module, and has a display pop open at the end of a pipeline showing how long the first image set took and how long subsequent sets are taking.  Right now, the time is shown for *every* image set, whereas we only want two columns: the first image set, and then subsequent sets all averaged together.

- Done (Joo Han) - ++ Prevent clicking pause/cancel buttons twice in the timer window.

- Done (Joo Han) - It would be nice if clicking '+' to add a module to the pipeline added the module after the point you have highlighted in the pipeline, rather than always adding the new module to the end.

- I think the only way to do this is take away the ability to select multiple things, which isn't worth it. (Colin) - When viewing algorithms in the main GUI on the Mac platform, the down arrow should
       move from one highlighted algorithm to the next (right now, the
       dotted line highlighting moves but nothing happens).

- Done (Joo Han) Make all pop-up windows use the proper background color and
       come to the center of the CP window (helpdlg, warndlg, msgbox): (changed as center of screen, will need handles to get CP center..)
       requires getting the handle then setting the color and
       position. (Also, for the variablerevisionnumber window, set colors appropriately.)

        ***Please use CPhelpdlg and CPwarndlg from now on***


- Done (Colin) For the ExportData data tool, we would like to have the option of swapping rows and columns. Right now, measurements are across the columns and objects/images are the rows. We would like to add a checkbox that allows us to swap these.

- Done (Joo Han) 'Report bug' button in CellProfiler's main GUI. (in the Help menu) The function itself is also implemented. mail server needs to be automatically detected, though..

- Done (Joo Han) 'GetHistogram' module, which has various options to create a histogram and allows each histogram to be saved so that a movie can be created later.

- Done (Joo Han) Added a zip create and download feature to CreateWebPage module so that the user does not have to download image by image.

- Done (Joo Han) I think this was already done before but not removed from the list: Add Image set # to the display for AlgAlign.m (see other displays for the precise format).

- Done (Joo Han) Have image windows pay attention to aspect ratio of images. (Created a new function called CPFixAspectRatio.m which fixes the ratio for quadrant subplots, and made every module that uses quadrant subplots call this function. Not perfect, but much better than before. May also accommodate double subplots later)

- Done (Joo Han) 'Fetch new modules from website' button in CellProfiler's main GUI. (in the Help menu) 
The function itself is also implemented, although it may have to be revised. Right now it tries to connect to cellprofiler.org and tries to download ModuleList.txt, and download all the modules listed in that file if the module doesn't already exist.

- Done (Colin)- Be sure that all exporting tools will function properly if some
       measurement fields are left blank, which is the case when there
       are no objects in a particular image, for example.  This is particularly a concern when the last image had no objects, so make a fake image set with no objects in the last set and see if everything works.

- Done (Colin) - ExportData Data Tool: I would like Export Process Data to include all of the variable descriptions and variable values and variable revision numbers, as is currently created when using the Save Pipeline button (save as a text file option).

- Done (Colin) - - Use the User's preference for font size for all figure displays and dialog boxes.  Do this by adding this line:
	FontSize = get(0,'UserData');
After the line in the DISPLAY RESULTS section:
if any(findobj == ThisModuleFigureNumber) == 1
And then, for each subplot or text window, add this line:
    set(gca,'FontSize',FontSize)
For each title, add properties at the end:
    title('Original Image', 'FontSize', FontSize)
Also, ask Ola whether we should take out the old method of finding the preferred font size, which was FontSize = handles.Current.FontSize;  I would guess we probably should remove that to make it more consistent throughout the code. {NOT SURE IF THIS IS UP TO DATE... ASKED OLA AND HERE IS HIS RESPONSE:"it seems that the FontSize is still stored in UserData, and not in a UserData.FontSize. However, the fontsize is stored in the UserData for the 0-window, i.e. the main matlab window.
I've seen that there is a UserData.Application = 'CellProfiler' and so on now, but this is stored  in the UserData for other figure windows (i.e. with handles > 1). So right now there is
no conflict, but we should perhaps everything consistent."

- Done (Colin) - 
GUI 2 +++ Make image tools more accessible/intuitive:
Create an image toolbar to replace the drop down menu in the main CP GUI 
- The toolbar should have a horizontal orientation due to the drop down menu
- One row of tiny icon-buttons for standard image tools
- Below that, a drop down menu for infrequently used/custom tools
- Below that, a 'status line' of text that indicates which image will be acted on, and any further instruction if necessary during the running of the tool.
- We want to be able to close/open this toolbar, so there should be a button in the main CP GUI to "Show Image toolbar".  The Image toolbar should be close-able, but probably the normal window-closing functions are adequate - it doesn't need a hide/cancel button I don't think.
- When clicking on any image, have the toolbar become active/come to the top of all other windows.
For standard image tools:
[including: SaveImageAs, OpenNewImageFile, ShowPixelData, ShowHistogram, SaveToMatlabWorkspace, ShowImageInNewWindow]
- Have tooltips appear upon mouse-over of each button that show the name of the tool 
- Convert the tools that Ola wrote in ImageTool_Callbacks.m into separate m-files and add them to the ImageTools folder.
For infrequently used/custom tools:
[ShowDataOnImage, any other .m file in the ImageTools folder]
- Have any .m file in the ImageTools folder that does not have its own button appear in a drop down menu below the icon buttons.
- Make the help within each tool accessible somehow: maybe a '?' button that then asks you to select the tool you want help on (by clicking its icon or choosing it in the drop down menu).
Other implementation notes:
- replace imagesc throughout all CellProfiler, Modules, and Tools code with a new function to go in the main CellProfiler directory: CPimagesc.m, which should include this code:
ImageHandle  = imagesc(Image);
set(ImageHandle,'ButtonDownFcn','ImageTool(gco)')
This will be a simple string replacement of imagesc > CPimagesc to convert all the modules & tools, and it will be more fool-proof for when people write new code.  It might also give us the flexibility later on to do things like set other settings (like aspect ratio or font size) for every new axis produced.
- Possibly add DataTools to the same toolbar, just have it divided in half?
- To aid in interactive selection of settings, allow user to
       create a figure window where images can be dragged and overlaid
       and toggled back and forth. See Inca and dragndrop in Matlab
       Central.  Or, in the image toolbar for each figure window, have an 'Export to common window' button which puts the figure into a single, common window where you can pile up a bunch of images and toggle back and forth.

- Done (Colin) 
- Fix interactive zoom button (within Show Image button):
         (1) It seems to always work OK the first time you click on
     Interactive Zoom.  The subsequent times you click on it though:
     sometimes it works just fine and other times there is no change
     to the image itself - it stays at fully zoomed out and doesn't
     respond to mouse clicks.  Perhaps related, sometimes lots of
     errors are spit out at the command line (I think only on
     subsequent tries to use the functionality).  Actually, maybe it
     has something to do with having other figure windows open at the
     same time? 
         (2) Once things are working, I would like to add this
     Interactive Zoom button to several other places: In
     CellProfiler.m: "Display data on image", "Show pixel data", and
     all of the figure display windows (for each algorithm - I am not
     sure whether buttons will stay intact, though, once each
     algorithm runs. so I am not sure whether it makes more sense to
     have the button added within each algorithm's code or within the
     main CellProfiler code when the window is first created). The
     most important thing is to add the button to "AlgImageTiler.m";
     that is why I acquired this code in the first place.

- Done (Colin) - Many modules that load images from the hard drive use a 
subfunction called RetrieveImageFileNames, but it's slightly different when used in different contexts. It would be nice to consolidate at least part of this function into a standalone subfunction.  This allows people to change something like which file extensions are ignored in the one subfunction rather than every individual module.

- Done (Colin) - GUI 4 +++ For the + button (add a module to the pipeline), it currently asks you to choose a file in the modules folder. It would be nice if it determined which modules are of which variety (Identify, Measure, Other, etc) and presented them in a nice categorized way that's more user-friendly. See the ManualCompiler.m code in DeveloperScripts for example code for categorizing modules. (note: this might be a bit time consuming to extract all this information each time you want to add a module to the pipeline).

- Done (Joo Han) - Fix speed problem when CP is run with figures open, which occurs due to the fact that uicontrols which are created for each image set are never deleted.

- Done (Joo Han) - Make a module to expand or shrink secondary objects. (e.g. to define a membrane compartment). Test to be sure that downstream modules work on the newly defined region: measure, subtract from the original compartment, save images.

- Done (Joo Han) - Make a FilterObjectsAreaShape module that selects objects according to statistics obtained using MeasureAreaShape module. This module can be used, for example, to eliminate objects with a solidity below 0.5.

- Done (Joo Han) - Improve the response time of the main GUI - previously, toggling between modules was very slow, especially on macs. Through a significant infrastructure change that should be taken into account in future changes, an instantaneous module toggling was achieved. Common 99 VariableDescriptions and Boxes were used before - now, they are classified the module number. (handles.VariableDescription{ModuleNumber}(VariableNumber) and handles.VariableBox{ModuleNumber}(VariableNumber).

- Done (Joo Han) - Make the order of variable declarations consistent by always having %textVAR declared first. Before, either %infotypeVAR or %textVAR came first depending on the use of infotype. Relevant redundant calculations were removed and now CellProfiler.m will fail to read modules properly if %textVAR does not come first.

- Done (Joo Han) Have the save settings function automatically add SET to the  
       name > can't currently do it with uisave. (The user is prompted whether he really wants to do this, with Yes as default. This actually seemed like a better and easier solution since it allows more flexibility.)

- Done (Joo Han) - Created CPwaitbar which uses a waitbar with adjusted colors and applied the function accordingly for load pipeline.

- Done (Colin) - SpotIdentifier: We haven't checked this module in a while. Figure out Excel mac vs Pc problems (Anne has
       an email from Mathworks describing the issue, thread QW38).
       Allow asking if numbers are in rows or columns.  Check offsets,
       flipping. Display value only when clicking (see email that Anne
       has: Mathworks tricks for interactive figures). Make manual
       page. Toggle several images. In general, it just needs to be looked over and polished up.

- Done (Colin) - Decide about cutting down the name of modules.

- Done (Joo Han) - We should change the Identify modules and the SaveImages module so that if the user has chosen to save a label matrix image, the user has a choice between saving the grayscale label matrix (in which case they should be warned if they have more than 256 objects and if saving in 8 bit format), or a colored version, created using label2rgb on the spot in the SaveImages module rather than having the colored version saved to the handles structure by the Identify modules, which requires Variables in the Identify modules asking the user if they might want to save the images later in order to save processing time. >> It's possible that Anne already did some of this??

- Done (Joo Han) - Created and polished up IdentifyWellSpots.m, according to collaborators' request. I originally made this to be a stand-alone module, but this made it less flexible, so now it should be used with other modules, including FilterObjectsAreaShape.

- Done (Colin) - Scrollbar bug: To reproduce, add LoadImagesText and IdentifyPrimIntensIntens to the pipeline. Use the scrollbar in the IdentifyPrimIntensIntens module and then select LoadImagesText. The variable boxes will then be shifted for LoadImagesText too.

- Done (Colin) - Sometimes we save images (using the SaveImages module, for example) in matlab .mat format. We can then load them into CP using LoadSingleImage, but none of the other LoadImages modules, nor the OpenNewImageFile Image tool, nor CPimread itself have been adapted to read images stored in .mat files.

- Done (Colin) - For OpenNewImageFile Image tool, make use of CPimread's ability to tell us which files it can read when deciding what file types to display in the uigetfile line.  Right now, the file types are hard-coded.  Also, when the user is selecting a file format for images in, for example, the SaveImages module, currently the user types in the file format into the edit box. Can we make this a popupmenu whose choices are determined by the output of CPimread (with no arguments, CPimread tells us which file formats it can read)?

- Done (Colin) - Put in toggle buttons for red, green, and blue if an image is color.  Maybe in CPfigure, or maybe just in specific places like spot identifier.

- Done (Colin) - Update ExampleFlySettings - it's currently in pretty bad shape and uses some pretty old revisions of modules. Trying to load the current ExampleFlySettings revealed a potentially serious problem - with the new way of showing settings (drop down menus, etc), I think it makes it frequently fail to load old pipelines properly.  So we should figure out if we can make CellProfiler more robust to loading old pipelines, otherwise everything we've worked on up to this point is going to be un-loadable.

Done - Anne - SpotIdentifier is storing a value with the handles field named "ImageTopLeftXCorrectedGray" which should instead be stored in a subfield of "Image".

- Done (Colin) - Loading pipelines bug: When loading a pipeline, the old settings do not seem completely cleared away. For example the old pipeline had module #2 with 15 variables and the new pipeline's module 2 has only 5. In handles.Settings.VariableValues, variables 6-15 for old module 2 are still present.  These variables are showing up in the main GUI when you click on the module, but this only happens sometimes - I can't pin it down.  Also, I loaded a pipeline into a 'fresh' CellProfiler, and canceled at the second module when it asked me whether to load saved or default variables (due to an old variable revision number). Then I looked at the handles.Settings and this is what was there (instead of it being empty):
                  PixelSize: '1'
                ModuleNames: {1x13 cell}
             SelectedOption: [0 0 0 0 0 0 0 0 0 0 0 0 0 0]
         NumbersOfVariables: [12 5 5]
             VariableValues: {2x12 cell}
    VariableRevisionNumbers: [3 2]

- Done (Colin) - Pixels is misspelled 'pixals' in SpotID - I fixed it there, but check other code to see if it's misspelled elsewhere too.

- Done (Colin) - When saving pipelines, it offers to add 'SET' to the name. We should change this to 'PIPELINE'. Is there a shorter bit of text we could add that would still make sense rather than PIPELINE?  Also, it should check whether the filename the user typed in already has 'SET' at the end - if so, skip the dialog box asking whether to add it.

- Done (Colin) - SpotIdentifier needs to load spot identifying information properly because xlsread just doesn't work reliably. We should use the code from AddData to read data from a text file (just a simple text list of information) and then reshape it to fit the proper grid.
[[[Colin & Anne decided to make a new module (undecided name, but something like LoadTextData) that allows text data to be imported, one bit of text for each image set. When this is done, remove the code from SpotIdentifier and instead ask "What did you call the imported text data you would like to use to label each spot (optional; use the LoadTextData module)?"]]]

- Done (Colin) - Adapt the crop module to allow an option to specify how many pixels to remove from each edge of the image (top,bottom,left,right). This is helpful if you don't know the size of the image but want to remove a certain number of pixels from the edge. We can already do this for the top and left edges by typing in the pixel at which to start and leaving the endpoint as "end" but we can't do it for the bottom and right if we don't know the incoming size of images. This will allow us to crop rectangular plate edges away.




DONE DURING IAP 2005 >>>>>>>

     -Done- Make the help button next to the image/data tools work.  It should pop open a listbox asking you to choose which tool's help you would like to see, and then it should extract the help from the tool's m-file.  The listbox should also give general help, i.e. "You can add your own tools by writing Matlab m-files, placing them in the ImageTools or DataTools folder, and restarting CellProfiler."

     -Done- When adding a module to the pipeline, check to see whether more than one function with that name exists on the Matlab search path. If so, warn the user, tell the user which pathname to the function will most likely be used, but warn them that this may change if the path is changed by adding modules from another directory.  Suggest that if the module has the same name as a Matlab function, they should consider renaming the module to prevent confusion.

     -Done- When adding a module to the pipeline, CellProfiler checks in a fairly rudimentary way whether it is a valid CellProfiler module and warns the user. However, the module is then half-loaded so nothing works properly and you have to restart CellProfiler. This checking should be more sophisticated, and should recover by not loading the module at all.

     -Done- In CellProfiler.m, check whether the guidata lines are necessary (marked with a TODO).  (They were unnecessary)

     DONE!! - Allow the Save Images module to deal with different bit depths, in case the user wants to save images in 16-bit (e.g. with PNG or JPG). Also allow the user to save an image as a binary (black/white rather than grayscale, so that any nonzero pixels = 1, most useful for viewing a label matrix).

     -Almost done- : Have the time for first set separate from the time for
       subsequent sets. 

     -Done- Make progress bar windows go away when using the close all figures and timers button (e.g. Correct illum modules).

     - done Have LoadSettings button determine whether a file is a valid Settings file.

    - Done "Make projection" module (= average, get code from DivideAllMean). 

     -Done-   adjusted the Show data on image button or the Show image button
       to load DIB images. Also need to adjust any other modules
       that use imread, including those which open all the images to
       calculate something, like CorrectIllum All modules and probably
       IdentifyPrimThreshold and ApplyThreshold (when the threshold is 
       automatically calculated).  Also, DIB's are currently being read
       upside down - need to flip them (flipud).

Done     - Throughout CellProfiler and its modules, remove unnecessary updating of the handles structure (guidata function).

