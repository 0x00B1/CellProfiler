CellProfiler cell image analysis software development 
September 21, 2005  IN ORDER OF PRIORITY

WANT IT ASAP:

Mike - don't forget NIST images!  - Anne

Requested by Anne - IdentifyPrimAutomatic has a nice thing when you click on one of the images within the figure that allows you to open in its own window, etc. We should implement this feature into all the modules.

- (Requested by Anne 8-23-05) - Go through the code looking for instances of the term "image set" and replace with "cycle" where appropriate.

- (Requested by Anne 8-23-05) - Make sure all code is using CPfigure rather than figure. I think the DataLayout tool in particular is using figure.

- (Requested by Anne) - Put in some way to save a figure (either a module or ImageTool). (Anne thinks the best approach is to adapt SaveImages module and SaveImageAs image tool to be able to save .fig format).

- (Requested by Anne 9-07-05) - The close windows button often fails and causes CP and Matlab to crash, presumably due to some weird interaction between X11 and Matlab.  Right now the code generates a list of windows to close and then tries to close them all at once. Perhaps it would be more smooth to change this to a 'while' statement, like 'while any figure windows are found that have the userdata = cellprofiler, close the one at the top of the list.'  Perhaps doing them one by one this way (and essentially refreshing the list that remain to be closed each time) will cause X11 to crash less often.  If we use this method, we should probably comment in the code why we are doing it that way, because it might seem slower. 

- (Requested by Anne 9-08-05) - Make measure windows expand to fit the number of lines of data (and the number of columsn) that are produced. Maybe try using CPtextdisplaybox.m, which displays text using a slider so it's infinitely expandable.

- (Requested by Anne) - Make a module to identify and count and measure objects within previously identified objects (e.g. nucleoli or organelles or speckles within nuclei or cells). This also requires designing a way to store measurements of Subobjects. Here's Ola's suggestions:

	From: 	  friman@bwh.harvard.edu
	Subject: 	Storing subobjects
	Date: 	August 13, 2005 3:03:31 PM EDT
	To: 	  carpenter@wi.mit.edu

One simple way to store subobjects that fits into the current way
of saving measurements is simply to have a "feature/measurement" that
indicates the number of the parent object.
For example, to have a structure handles.Measurements.Nucleoli that in addition
to the usual measurements contains a handles.Meaurements.Nucleoli.Parent field
where the number of the corresponding parent object is stored, and a handles.Measurements.Nucleoli.ParentFeatures
which indicate the name of the parent (e.g. 'Cells' or 'Nuclei'). It is not straightforward to have a
similar entry for the parent objects since the parent objects (e.g. Cells) can have
a different number of children (while each child only has one parent object). Storing the numbers of the
children of a parent is not straightforward in the current measurement system, because the parent
objects can have a different number of children. This would require storing a cell array with
the numbers of the children for each parent object, and that would
cause problems for all data tools that don't know how to handle this cell array when
they encounter it. However, I guess there can be a handles.Measurements.Cells.Children field which contains
the names of the children objects (e.g. 'Nucleoli', 'Organelles', 'Speckles'....) but not corresponding numbers.
If one wants to find the children of a  certain Cell object with number K, one must then look in
handles.Measurements.Cells.Children to find the  name of the children (e.g. 'Nucleoli', 'Organelles', 'Speckles'....)
and then search e.g. handles.Meaurements.Nucleoli.Parent for the Nucleoli objects that have object K as parent.
It think it would be quite simple to introduce the above system in the IdentifyPrimary/IdentifySecondary/IndentifyTertiary
way of identifying objects.

Best,
Ola

- (Requested by Anne) - For the Data Layout tool, the help is not extensive. Check an old version of the tool and salvage some of its help.

- (Requested by Anne) - Whenever anything is saved to the hard drive, add an error
       check to see whether the user has permission to write to that
       location (esp. CellProfiler.m and AlgSaveImages.m). From within the target directory, run:
       [ignore,Attributes] = fileattrib, if Attributes.UserWrite == 0,
       then error(INSERT PROPER ERROR STUFF HERE), end 

- (Requested by Anne) - Save Image As tool: does not work well for all kinds of
       displayed images (e.g. The mean image produced by correct illum
       divide all mean comes out weird). Test it with a bunch of image outputs and make it more compatible.

- (Requested by Anne) - When figures produced by DisplayGridInfo are saved as matlab fig files and opened later, when CellProfiler itself is not open, and then you click on SpotIdentifying Info - Show, an error is produced (at least when no spot identifying info has been loaded): (NOTE: Not sure if this is still a problem - doublecheck first.)
??? Error using ==> guidata
H must be the handle to a figure or figure descendent.
Error in ==> CPmsgbox at 198
handles = guidata(findobj('Tag','figure1'));
Error in ==> CPwarndlg at 42
handle = CPmsgbox(WarnStringCell,DlgName,'warn',Replace);
??? Error while evaluating uicontrol Callback.

- (Requested by Anne) - SaveImages module - have a way that you can type in special formatting. E.g. if you are going to save in gif mode, you should be able to type in the optional parameters like 'BackgroundColor',0 into a text box and have that text appended within the imwrite command.

- (Requested by Anne) - The error dialogs are not proper CP color. Also, in several places, we use the helpdlg Matlab function and so the color of the resulting help dialog window is not the proper CP color.

- (Requested by Anne 8-29-05) - Not sure if this is feasible (especially across platforms), but it would be nice to have CellProfiler start by the user doubleclicking an icon rather than starting up Matlab and typing CellProfiler.

- (Requested by Anne) - Try to make the CellProfiler logo replace the X11/Matlab logo in the top of the main GUI.

- (Requested by Anne) - In SaveImages, have the file format in which to save images be a popupmenu based on what is compatible with the imwrite command of matlab, plus .mat files. If possible, this list should be automatically obtained (in the same way that typing imread or CPimread lists the file formats), but i don't know if imwrite yields a list like that. Or maybe it's the same list as imread.

- (Requested by Anne) - The CreateWebPage module needs help documentation and to be put in the category 'Other', and the license info, etc.  If there is nothing of interest to display in the figure for this module, it ought to close during the first cycle. The popup window is the wrong color at the end after the html file is saved.  The 'Download zipped file' html code should be at the top of the page rather than the bottom.

- (Requested by Anne 08-30-05) - If the current default image directory no longer exists and then you go do anything like File > Open Image, there is a command line error that the directory cannot be found.  Do we need to change all instances of cd to CPcd that is able to handle this kind of error and warn the user?
??? Error using ==> cd
Cannot CD to /Users/anne_carpenter/Desktop/2005_09_20NovartisYeast (Name is nonexistent or not a directory).
Error in ==> OpenNewImageFile at 45
cd(handles.Current.DefaultImageDirectory);
Error in ==> CellProfiler>OpenImage_Callback at 3586
OpenNewImageFile(handles);
Error in ==> CellProfiler>gui_mainfcn at 4788
        feval(varargin{:});
Error in ==> CellProfiler at 42
    gui_mainfcn(gui_State, varargin{:});
??? Error while evaluating uimenu Callback.

- (Requested by Anne) - Test each module on color vs grayscale and make sure they all work or have some type of error catching.

- (Requested by Anne) - The RGB buttons on CPfigures produce an error at the command line when the figure is only displaying text. It should either produce a warning dialog stating what the RGB buttons are for and that there is no image in the window, or it should just do nothing.
??? Error using ==> set
Index exceeds matrix dimensions.
??? Error using ==> set
Error while evaluating uicontrol Callback.

- (Requested by Anne) - In File > Open Image, underscores in the file name are not displayed as underscores - instead they make the character after the underscore appear as a subscript. We have fixed this elsewhere (I think in the histogram tool).

- (Requested by Anne) - The help box that opens when you click for information about a specific module has a scrollbar when the text is very long. The window is re-sizable, but resizing doesn't allow the text to wrap around nor does it allow any more text to be viewed. We should either allow things to wrap in a more sophisticated way, or we should make the window non-resizable.

- (Requested by Anne) - There is a bit of functionality in IdentifyPrimThreshold which is lost in IdentifyPrimAutomatic: the ability to calculate a threshold based on all images of a given type and then apply that global threshold to each image.  This ought to be added to IdentifyPrimAutomatic.

- (Requested by Anne) - right now we choose between intensity and shape (or distance) at two places in IdentifyPrimAutomatic. It might be cool to develop a more sophisticated method that allows you to balance the input of these two sources of information.

- (Requested by Anne 8-26-05) - I am pretty sure the close figure button doesn't work when you are analyzing images.  Haven't checked the open figure button.

- (Requested by Anne) - Implement the following threshold calculating stuff as described in the help for IdentifyPrimAutomatic:
% Threshold correction factor:
% When the threshold is calculated automatically, it may consistently
% be too stringent or too lenient.  For example, the Otsu automatic
% thresholding inherently assumes that 50% of the image is covered by
% objects. If a larger percentage of the image is covered, the Otsu
% method will give a slightly biased threshold that may have to be
% corrected. In a future version, the 'Threshold correction factor'
% may be removed and the "Approximate percentage covered by objects"
% information used instead.  For now, however, you may need to enter an
% adjustment factor which you empirically determine is suitable for
% your images. The number 1 means no adjustment, 0 to 1 makes the
% threshold more lenient and greater than 1 (e.g. 1.3) makes the
% threshold more stringent.

- (Requested by Anne 8-23-05) - Try to get yeast identification working for phase contrast images - a lot of people want this and I think it's doable but we just haven't put in the effort. IdentifyPrimYeastPhase was one attempt, but it's very empirical and not very adjustable for other images. In fact, it doesn't even work well at the moment for the original images, from Ben 03_25_2005.  Check into the literature for better methods or try to get that method working. Not sure if these references are for fluorescence or phase images:  SCMD: Saccharomyces
       cerevisiae Morphological Database. Nucleic Acids Res. 2004 Jan
       1;32 Database issue:D319-22. PMID: 14681423  
Perhaps more promising is the paper Coelho, M, Ferreira et al, Applied Microbial and Cell Physiol, 2004, where they mention having Matlab code to accomplish yeast cell segmentation (Anne has this paper).

- (Requested by Anne 8-24-05) - The ShowDataOnImage ImageTool is very buggy lately. In particular, it can't seem to look up the image filenames, and when it lets you choose an image file, on the mac it has the annoying {*.*} problem so that you can't choose an image file until you change the dropdown menu for file format in the uigetfile window.

- (Requested by Anne 8-30-05) - It seems to take forever to smooth images when using a large artifact width in CPsmooth.  Can we make it faster?  Perhaps if the artifact width is large relative to the image size, we could resize the image first or something like that.

- (Requested by Anne 8-30-05) - If the user enters an odd number for CPsmooth (a subfunction used by the Smooth module, among others), right now it yields the error 'The text you entered for the smoothing..." and it cancels all processing. Instead, let's have it continue processing by rounding the user's entry down to the nearest integer but meanwhile pop up a warning dialog box telling the user that their entry has been rounded down.  Make sure the warning dialog box does not pop up new every time around the cycle (maybe only if setbeinganalyzed = 1).

- (Requested by Anne) - Make ImageTiler produce a button in the final figure that allows retrieval of a high resolution image. (Click the button, then click the part of the image you want to see in more detail). There should also be a button that allows you to select the folder where the images are stored so that the high-res button knows where to go to look for the images, in case they are not in the same place they were when the figure was originally made.  Adjust the help if ImageTiler to reflect this change when it's made.

- (Requested by Anne 9-01-05) - We used to have code that allowed variable edit boxes to expand when the text within them was too long to fit. It mostly became unnecessary when Colin invented the new pathname entry boxes/browse buttons (because this usually only happens when we are dealing with typing pathnames into edit boxes), but I would still like edit boxes to expand if text becomes too long to fit, so we should find that code and re-implement it.

- (Requested by Anne 9-01-05) - The waitbar window produced by the CorrectIllumination_CalculateUsingIntensities module stays open after closing CellProfiler (it must not have the UserData indicating that it's a CellProfiler-related window). And, it's the wrong color.

- (Requested by Anne 9-01-05) - The AddModule window still needs a bit of work; it doesn't look very compact and neat. The browse button should be small and placed near the current path.  The other buttons could be smaller and more compact (e.g. move both help buttons up and have the word 'Help' placed between them). I'd vote for getting rid of the frames so that there is less clutter, and having just one frame around the buttons along the bottom, once we've removed the unnecessary buttons.  I think we should get rid of the 'Add module' button and instead just have text say "Doubleclick to add modules to your pipeline" (maybe the title of the window itself should state that text; otherwise it could just be text along the top of the window). We could get rid of the Done button and assume the user will use the normal mechanism to close the window.

- (Requested by Anne 9-01-05) - We'd like to make the variable descriptions consistent - at the very least we should try to be consistent with stating "Choose" (rather than "select"), and phrasing things as questions versus "Enter the ..."   Also, look through the variable descriptions for uses of computer-ific words like 'segmentation'.

- (Requested by Anne 9-07-05) - In the modules where we use pathnameVAR to create a long box with a browse button, the variable descriptions all need to be changed to state that you can type a period (.) to use the default image directory (or output directory, depending on the context).

- (Requested by Anne 9-19-05) - For cytoplasmic/nuclear translocation, implement Ilya Ravkin's technique where instead of having a binary mask that denotes nucleus vs cytoplasm, there is a weighted function that is based on the nuclear stain. The Univ. Delft people have done similar work in this area.

- (Requested by Anne) - Try to compile the Matlab code so CellProfiler can be run on computers that don't have Matlab.

-- (Requested by Susan) - on WriteSQL module: if I only include WriteSQL module in pipeline I don't get an error message. The same thing with the situation if I only include WriteSQL and CreateBatchScripts modules in the pipeline. It will be nice to let user know that these are no useful pinelines.

- (Requested by Anne 9-21-05) - THere is a cool tool for interactively selecting a threshold. Perhaps we can add a 'test mode' button for the Identify modules that allows you to choose a threshold the first image cycle. It would use this code:
http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=6770

- (Requested by Anne 9-21-05) - If a matlab file is corrupt, there is a command line error that is not caught by CellProfiler:
??? Error using ==> load
Unable to read MAT-file /Users/anne_carpenter/Desktop/illum10PIPE.mat
File may be corrupt.
Error in ==> CellProfiler>LoadPipeline_Callback at 427
LoadedSettings = load(fullfile(SettingsPathname,SettingsFileName));
Error in ==> CellProfiler>gui_mainfcn at 4849
        feval(varargin{:});
Error in ==> CellProfiler at 42
    gui_mainfcn(gui_State, varargin{:});
??? Error while evaluating uimenu Callback.

- (Requested by Anne 9-21-05) - We haven't tested these modules in a *very* long time - so we should try them out & make sure they work!
MergeBatchOutput
Restart

- (Requested by Anne) - Maybe make new pipelines to show off different features of CellProfiler if desired (e.g. the SpotIdentifier or yeast colony finding). [Anne recently did yeast colony finding and human nuclei - we can spruce these up just prior to release, so maybe put this back on the general TODO towards the bottom where we have "Pre-release" stuff to do.

- (Requested by Anne) - Adjust the boilerplate of authors in each m file:
 Authors (in order of joining the project):
   Anne E. Carpenter
   Thouis Ray Jones
   In Han Kang
   Ola Friman
   Steve Lowe
   Joo Han Chang
   Colin Clarke
   Mike Lamprecht
   Susan Ma

- (Requested by Anne 9-28-05) - Build some kind of module that allows interfacing with ImageJ so that routines built for ImageJ can be run in CellProfiler??  No idea how complicated this would be.

---------------------------------------------------
JUST PRIOR TO PUBLIC RELEASE:
- Make the download new modules work - I think it should also download new CellProfiler.m and ImageTools and DataTools, etc.
- Smart Indent
- M Lint error checking
- Check for TODO's and FIX ME's throughout the code
- Test every module & button
- Especially, check whether closing figure windows still allows the module to proceed - sometimes we have calculations in there which are necessary downstream that aren't calculated if the figure window is closed. Also, check whether starting a pipeline containing every module properly opens up figure windows when using the Restart module to being at something other than setbeinganalyzed = 1.
- Prepare updated manual
- Check whether canceling works 
- Make reference sheet with short descriptions of the modules.
- For each common application (e.g. cell count, yeast colony count, staining intensity, cell cycle, nuclear/cytoplasmic translocation) and cell type (e.g. human, yeast, drosophila), make an example pipeline file and a nice pdf document showing the results: We should use the 'test mode' option in IdentifyPrimAutomatic to show all the possibilities, and then show results from the ideal pipeline. This will give people a good starting place for their images. Anne has example images and starting points for new pipelines in the ExampleFlyImages folder.
- Design an informational brochure
- Make a tutorial to demonstrate how CP is used.
- copy CP code onto CDs for Colin to take to ASCB meeting in San Francisco.
Sites that review and list software:
www.zdnet.com	downloads.mycomputer.com	www.windows95.sk
directory.google.com	www.libpng.org	cn.tech.yahoo.com
www.dmoz.org	softload.narod.ru	www.chinabyte.com
www.winsite.com	www.cheta.net
- Get the email addresses of all corresponding authors from all the research articles Anne has collected and send them an email telling them to visit cellprofiler.org and sign up for the email list if desired.
- The Broad institute has done a lot of thinking and infrastructure for distributing free software. They have narrowed down to 3 licenses (GPL, a variant of academic open source, and one other) that their scientists use and they also have pages to help register users who download their software etc. this might be useful for us.

---------------------------------------------------
POST-PUBLIC RELEASE SUPPORT:
     - Monitor imaging newsgroups and inform people about the software
     - Provide technical support/help desk
     - Fix bugs
     - Maintain for new releases of OS's and Matlab
     - Check Matlab Central for useful code to incorporate into
       CellProfiler or its modules (last checked on 9-16-04:
       Biotech/medical, Graphics (all 3 categories), Image Processing,
       Utilities - GUI Tools & examples, and Misc.) 
     - Organize training workshops
     - Present at conferences
---------------------------------------------------
THINGS TO DO WHEN NEW VERSIONS OF MATLAB COME OUT:
- update the image file formats that are readable in LoadImages modules.

---------------------------------------------------

LONG-TERM:

GUI 1  (Requested by Anne) -(Joo Han might work on this) +++ Histogram DataTool is kind of hacked together at the moment. Streamline it and update its help; possible other improvements: allow fewer labels, plus fewer decimals (right now, it's either-or). If you choose option P (percentage) rather than N (number), the y axis is still labeled 'Number of objects' rather than 'percentage of objects'.

GUI 3 +++  (Requested by Anne) -Make sure the ManualCompiler still works (in DeveloperScripts). Make the help/manual prettier: For each example image that is just text, type the text into the help for that file instead of referring to the image, because as it is these images are stretched a lot.

VISION PROJECTS:

- IMPROVE AUTOMATIC THRESHOLD CALCULATIONS!!!  Implement Ray's belief propagation idea??

  - Write algorithms to compare hand-traced results to CellProfiler
       results quantitatively, then apply them to our hand-traced data
       sets. [2 parts: 1) segment manual images.  2) match object to object, 
	 3) signed distance transfer]

     - Allow batches of different settings to be run and their results
       compared 

     - Allow automatic selection of settings based on hand-traced images

     - Get someone to Hand-outline a second set of images to compare
       to Chris' set. 

     - Make separate Identify Secondary modules: one for bright lines
       and one for dark lines between objects.  Also try watershedding
       the gradient image rather than the original. 

     - Improve background/cell edge finding - threshold vs. adaptive
       threshold vs. watershed
---------------------------------------------------

PROBABLY DO NOT WANT TO INVEST TIME IN THESE IMMEDIATELY:

- (Requested by Colin) - The measure modules create an error when a label matrix with an object completely missing is given to it.  We took care of this by making Identify modules create a single pixel if an object is missing.  It would be nice to allow objects to be missing in measurement modules.  Also, once the measurement modules are working, make sure it is possible to export the data to excel.

VISION 2 +++  (Requested by Anne) -Improve foreground/background determination for the IdentifySecPropagate module.  Ask Ray for advice. Here is one idea:
Make the background correction based on Each image (rather than All images) a little more sophisticated as follows: Cell segmentation and llumination correction can be made simultaneously for best result.
The usual procedure is as follows (the technique is called Expectation Maximization segmentation):
Segment cells
Estimate illumination variation from the background and correct the original image
Re-segment cells
Re-estimate illumination variation from the background and correct the original image
Re-segment cells
Repeat until convergence.
The iterations can be performed on a low-resolution version of the original image, e.g. 200x200 pixels, so I don't think it's time-consuming.  This will involve figuring out how to call a downstream Identify module to use the settings and code from the downstream module (otherwise we'd have to build background subtraction into every identify module). 

++  (Requested by Anne) -Implement the algorithm for in vitro angiogenesis from  IEEE Trans Med Imaging. 2005 Apr;24(4):549-53. Robust quantification of in vitro angiogenesis through image analysis. Niemisto A, Dunmire V, Yli-Harja O, Zhang W, Shmulevich I

++  (Requested by Anne) -Implement the algorithm for migration analysis from Qin J, Chittenden TW, Gao L, Pearlman JD.	 Automated migration analysis based on cell texture: method & reliability. BMC Cell Biol. 2005 Mar 3;6(1):9. 

++  (Requested by Anne) -Implement the algorithm for identifying objects based on granulometry from Prodanov, Heeroma, and Marani, J Neuroscience Methods 2005. The code may be available from the authors directly, or supplemental journal data, or from ImageJ. This might be a good practice to build an interface which allows ImageJ routines to be run within CellProfiler.

+++  (Requested by Anne) -Make a user-scoring module that allows the user to view and
       annotate each image manually. Show control side by side (1-4 at
       a time) and add that assessment to the data structure. Maybe
       allow randomizing (to do blind tests). Allow clicking
       through. Could also be used just for viewing images (e.g. every
       third image in a gigantic image set).  Whether the file name
       and/or sample info is shown should be optional. 

+++  (Requested by Anne 9-14-05) - Implement Bob Murphy's classification algorithms into CP?  These algorithms compare images of protein localization and can tell you which compartment a protein is localized in.  See Chen, Murphy, J Biomed/Biotech 2005 87-95.

+++  (Requested by Anne) -Allow data to be exported to Open Microscopy Environment
       databases.  (Being worked on by Tony Scelfo in Peter Sorger's lab).

+++  (Requested by Anne) -Binucleate cells: figure out how to identify and count them

+++  (Requested by Anne) -Make modules to identify objects in transmitted light/DIC images. Potentially useful references: Heise, Sonnleitner, Klement, Microsc Research & Technique 66:312-320 (2005).  This paper looks like it has a few options for ways to pre-process DIC images to end up with images that look more like fluorescence images which can then be processed using our normal Identify algorithms.

+++  (Requested by Anne) -Align/resize stack of images (like yeast plates). See Matlab
       demo on image registration. Did Chris already do this? 

+++ (Requested by Anne) - Reproduce the major 'big pharma' screening assays:
cell adhesion
Neurite outgrowth
micronucleus formation
protein translocation
cell cycle analysis
cell differentiation
adipogenesis
reporter gene analysis
cell viability
cell spreading
cell proliferation
apoptosis
microtubule formation
receptor trafficking
protein kinase activation
mitotic index
proteasome activity
oligosaccharide synthesis
cell migration
membrane potential
gap junction formation
p-glycoprotein activity

- Neurite tracing algorithm: see potentially useful references: J Neurosci Methods. 2005 Sep 17; Automated identification of axonal growth cones in time-lapse image sequences. Keenan TM, Hooker A, Spilker ME, Li N, Boggy GJ, Vicini P, Folch A.

+++  (Requested by Anne) -Particle tracking over time module. Good references:
Sbalzarini Koumoutsakos J Struct Biol 151 (2005) p 182 has fairly complicated free code in C, although a license of some sort is required.  Also, in there there is a reference to Cheezum BioPhys J 2001, 81, 2378-2388 having several algorithms implemented and compared.
Debeir,  Decaestacker IEEE TRans. Medical Imaging vol 24 no 6 June 2005. I don't really understand the algorithm in this one.
Miura Adv Biochem Engin/Biotech 2005 95:267-295 is a nice overview.
See also Niven, Fuks, J MIcrobiol Methods 2005 where they feed XY locations into a program they wrote called ObjectTracker, which might be helpful.

- (Requested by Anne) - If we want to extend CP to analyze 3D images, there is a good example available here: Gue, Messaoudi, Sun, Boudier Cytometry 2005 on Smart 3D-FISH. It's available as an imageJ plug in so it might be good as a practice to integrate ImageJ and CP.

- (Requested by Anne) - New algorithm to calculate colocalization. Ask Ray if it seems like a good idea. One part of the paper is simply describing the concept of masking the image for the region of interest (ROI) prior to calculating the correlation coefficient, which we already do. But the second part is a different calculation which may be superior to the one we use, but not sure: Jaskolski, Mulle, Manzoni J Neurosci Methods 146(2005) 42-49. The matlab code is apparently available from the authors.

[ASK RAY IF THIS IS WORTH IT (HE SAYS PROBABLY NOT)]>
- Adjust ModuleNames or VariableValues so that their dimensions match (if possible). E.g. the following example has 6 modules loaded, so it would make more sense if VariableValues was a 13 x 6 cell rather than 6 x 13, so that all four Settings have 6 columns.
Settings =      ModuleNames: {1x6 cell}
             VariableValues: {6x13 cell}
         NumbersOfVariables: [13 6 5 6 4 8]
    VariableRevisionNumbers: [2 0 1 0 1 1]
*Note: This requires editing almost all the modules, while this improvement is not absolutely necessary; the time cost should be considered.

[ASK RAY IF THIS IS WORTH IT (HE SAYS PROBABLY NOT)]>
+++ Restructure CellProfiler.m so that the GUI creates a configuration file which is then sent to a simple pipeline program. That would make farming out jobs to multiple machines easier, running a job that broke somewhere, and it would make it easier to create new GUIs aimed at different tasks, if people wanted to. The current GUI wouldn't actually need to change, it could still call the pipeline-running-function and parse errors from it (which is a definite good thing to keep around).   It would be entirely under the hood.
