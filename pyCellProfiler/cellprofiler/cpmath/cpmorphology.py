""" cpmorphology.py - morphological operations not in scipy

"""
__version__="$Revision: 1 "

import numpy
import scipy.ndimage

def fill_labeled_holes(image,size=(3,3)):
    """Fill holes in objects in a labeled image
    
    image - a label matrix, for instance as generated by scipy.ndimage.label
    This algorithm takes a labeled image and fills any hole (unlabeled 
    pixels surrounded solely by one label). The key insight is that if
    you generate a binary image composed of the unlabeled points and
    you label it, each hole gets a unique label. After that, you can get
    rid of any labeled "hole" that's touching the border and any labeled
    "hole" that's touching more than one labeled object (space between two
    touching objects). A further trick is to figure out whether a hole
    touches more than one object or the edge. To get the min and the max,
    ignoring the holes, we label the holes as zero in the labeled image
    for the max (already done) and label them with infinity (more or less)
    when doing the min. Finally, we can get rid of the "holes" touching
    the border by labeling the border with zero (by choosing a mode of
    "constant" and a cval of zero) so that their min will differ from
    the maximum object they touch.
    """
    structure = numpy.ones(size,dtype=int)
    negative_mask = (image == 0)
    labeled_holes, nholes = scipy.ndimage.label(negative_mask,structure)
    image_with_high_holes = image.copy()
    image_with_high_holes[labeled_holes > 0] = 1000000000
    min_label = scipy.ndimage.minimum_filter(image_with_high_holes,
                                             size=size,
                                             mode = 'constant',
                                             cval = 0)
    max_label = scipy.ndimage.maximum_filter(image,
                                             size=size,
                                             mode = 'constant',
                                             cval = 0)
    min_label_per_hole = scipy.ndimage.minimum(min_label,
                                               labeled_holes,
                                               range(nholes+1))
    max_label_per_hole = scipy.ndimage.maximum(max_label,
                                               labeled_holes,
                                               range(nholes+1))
    max_label_per_hole = numpy.array(max_label_per_hole)
    hole_label = numpy.array(min_label_per_hole)
    hole_label[hole_label != max_label_per_hole] = 0
    hole_mask = hole_label[labeled_holes] > 0
    output_image = image.copy()
    output_image[hole_mask] = hole_label[labeled_holes[hole_mask]]
    return output_image
