CellProfiler cell image analysis software development 

- Anne 10-4-06: The ClassifyObjects module is strange - it no longer shows the resulting objects color-classified, but it used to. It has a 2 x 2 figure window but only two panels on the right hand side, which is weird. The histogram looks nice, but the numerical data in the chart below the histogram is so smooshed you can't see anything useful from it (at least in the case where I had only two bins). 

- Anne 10-4-06: The histogram tool nicely saves your entries from the previous time you ran the tool, which is great. However, it does not seem to store the "last image" value; it usually shows image # 1 to 1, even when I left it 1 to 96 the previous time.

- Anne 10-4-06: In Calculate Ratios, we have implemented some catches to deal with NaNs and divide by zeros, etc. I don't like the fact that we are replacing uncalculatable things with the mean of the remaining values, rather than just leaving them as NaNs and ignoring them in downstream calculations. Everything has ended up a little messy, same thing with Histogram tool. We need to go through things systematically and decide how this sort of thing should be handled (in general, store values as NaNs and then have all the data tools/calculation modules be able to deal with NaNs appropriately).

- Anne 10-4-06: When running the compiled Mac version of CellProfiler, if you have not set the File > Set Preferences > Modules directory properly, you get a pretty unintelligible error message when you try to load a pipeline (something about ModuleName not found). It should suggest that you try setting the File > Set Preferences > Modules, because this is a pretty common error.

- Anne 10-4-06: In CalculateRatios module, add some error checking to be sure that whatever the user names the ratios, there are no spaces, and that it is an acceptable fieldname. Could just use a try/catch around it; there might be a matlab function to see whether a string is an acceptable fieldname, I think.  Also, check the Classify module, because if the user enters bin names these also should be checked to see that they are acceptable fieldnames (perhaps there is already a fix there?).

- Anne 9-27-06: I think we can make a small change to IdentifyPrimAutomatic in order to make it able to identify yeast cells from brightfield images, according to Ilya Shmulevich Proc IEEE EMBS Aug 30 2006. "Extraction of the number of peroxisomes" It appears they threshold the intensity image and threshold the variance image, combine them somehow, fill holes, and then use shape-based clump separation. There is another entry far below on the TODO list with lots of other ideas for how to do it, but perhaps this quick method will work. Or, maybe they just had really easy images. I've asked Ilya for the code and for the test image set.

- Anne 9-26-06 - CPplotmeasurement is a little bit of a mess: I think the strategy is to ask for UserAnswers only if you are running this subfunction  from the PlotMeasurement Data Tool, and not when running from the DisplayMeasurement module (in which case ModuleFlag = 1), because it doesn't make sense to have a dialog popping up all the time when running a pipeline. I think that this is handled properly when running the DisplayMeasurement module using the Scatter 2 option, but not when using the other three options (bar, line, scatter1). Also, when running the DisplayMeasurement module, if you click on some other window while the module is running the plot ends up in some other figure window by accident.  And, if you have chosen a measurement type that does not exist (e.g. AreaShape, but with no MeasureObjectAreaShape module in the pipeline), it gives a matlab based area 'reference to non-existent field' rather than a nice CellProfiler type error.  Anyway, the code ought to be thoroughly checked through to make sure it's logical overall. 

- Anne 9-14-06 add an error catch if the default output folder doesn't exist, or if you don't have write permission there, when you are trying to export data.

- (Anne 6/14/06) - *outlines* of objects can be produced by Identify modules. Outlines are in a special group (outlinegroup) and they are binary images. But these images should also be in the imagegroup so that they can be inputted into other modules, like GrayToColor and SaveImages. Is it possible to add outlines to the image group as well, or would it be better to adjust every module that has a pulldown menu of images to also display outlinegroup members' names as selectable? Temporarily, I changed GrayToColor to allow us to custom enter image names, but we should change it back when we fix this problem.

- (Anne 6/12/06) - Do we have developer's instructions somewhere that warn about code changes that will also require changes in your compiling process (using MATLAB editors especially)? It would be good if Anne and the summer students are more aware of them so things don't crash and burn!

- (Anne 9/1/06) - We should implement Krawtchouk and tchebyshev moment invariants to measure cell shape (see Bayraktar Rajwa Robinson SPIE 2005 (Feature extraction for cellular shape analysis... plus Rajwa's Pattern Recognition 2006 preprint, Anne has both). We know this group and could probably get code straight from them. Anne emailed them 9-1-06 asking for them to send it to us.

- (Requested by Anne 11-21-05) - In LoadImages and LoadSingleImage, we have a variable that asks for the file extension and it says "DOesn't work right now". We should make it work! 8-25-06 I have a vague impression that someone may have worked on this already, but we should definitely check -Anne.

- (Anne 4/25/06) - Rename MergeOutputFiles and ConvertBatchFiles to be consistent with each other (maybe both should be BatchOutputFiles?), and combine the code?

- MODULE/VARIABLE LOADING ISSUES: (1) [Colin] I think if you change a indep infotype and then click on another module before clicking anywhere else, it doesn't actually add the new infotype. (2) [Anne] Usually I name (in an IdentifyPrimAutomatic module) the outlines so they can later be overlaid on an image. When I type in the name in IdentifyPrimAutomatic and then go to the OverlayOutlines module, the new outlines name is not selectable. If I go back and click on the outlines name again and press enter and then go back to OverlayOutlines, it finally shows up. So it seems like some sort of little bug.

- MANUAL IMPROVEMENTS: (Requested by Anne 12-09-05)- (1) Many modules do not have corresponding images in the manual, so we should make some example images in Promotional/ImagesForManual. (2) the Manual Compiler chokes on the images for CorrectIllumination_Apply and _Calculate due to the underscore in their names - need to fix. (3) We want the manual compiler to generate a page towards the beginning with all the short descriptions from each module and tool as a Quick Reference Guide.

- (Requested by Anne 12-15-05)- MEMORY ISSUES: Should we somehow refresh memory after every cycle of CP? It gets slower and slower with each cycle which can be fixed by using Restart module, so something must be up with the memory handling. See matlab's pack function, perhaps. Another idea: after every cycle should we check to see what images are used downstream (checking all the imagegroup members) and strip the rest out? This would save a lot of memory. Also, maybe try using MATLAB's function memmapfile to use memory mapping when loading really large images to see if it helps relieve 'out of memory' issues. We have super-large 5x scans of entire slides to use in this testing. If this works well, we should have "run in memory mapping mode for large images?" as a preference in Set Preferences, and then we would adjust the CPretrieveimage subfunction (or whatever it's called) to check whether we are in memory mapping mode or not in order to decide how to retrieve images. It's unclear to me whether this would involve a ridiculous amount of change - for example, would we have to change every module that stores an image in the handles to store it in a particular special way?

- Check Matlab Central for useful code to incorporate into CellProfiler or its modules (last checked on 9-16-04: Biotech/medical, Graphics (all 3 categories), Image Processing, Utilities, GUI Tools & examples, and Misc.

- ***NICE PROJECT FOR A UROP*** Anne 8-22-06: We would like to make a module that allows testing various settings for particular variables. The module would only allow processing of the first image set loaded in the LoadImages module (most likely, unless you can think of a way to do multiple image sets) but would automatically rerun the pipeline using a variety of settings. The output would be comparable to how we deal with movies, I think (frame 1,2,3 would be the same original image but with the different settings the user specifies). For example, if the user wanted to run the pipeline with IdentifyPrimAUto threshold set to a range of values, they would add this new TestSettings module to the end of the pipeline and specify: Module number, Variable number, and Values to test (edit box) where they would enter a range. Most likely, the first value they want to test should be specified in the original module in the pipeline, and the remainder of the values would be entered here, either comma-delimited, or using Matlab's normal range specifications, like [0:0.5:10]. So, when getting to this module at the end of the pipeline, the current image set's processing and measurements and everything would need to be moved somewhere so as not to be overwritten in the next round, and the settings in the handles structure need to be changed so that the next round will allow processing the same image using the next incremented settings.

- (Requested by Anne 12-09-05)-- NOT SURE IF WE REALLY WANT THIS ENOUGH TO WORK ON IT: Make a data tool for normalization - see the help in Data Layout for starters and talk to Adam. We will probably put this tool in CellVisualizer instead.

- (Requested by Colin) NOT SURE IF THIS IS PRACTICAL - The measure modules create an error when a label matrix with an object completely missing is given to it.  We took care of this by making Identify modules create a single pixel if an object is missing.  It would be nice to allow objects to be missing in measurement modules.  Also, once the measurement modules are working, make sure it is possible to export the data to excel.


THINGS TO DO WHEN NEW VERSIONS OF MATLAB COME OUT:
---------------------------------------------------
- update the image file formats that are readable in LoadImages modules and saveable in SaveImages module and SaveImageAs Image tool, and anywhere else needed. Searching for 'DIB' is a good way to find image-reading code.

- update the colormaps available.

- For many functions we have made our own CP versions - check the new matlab code to see if they've changed anything that would warrant us re-creating the CP subfunctions to use the new code. This would require saving a copy of the old matlab code to do side by side comparison (actually, could use 'file comparison' tool in matlab, I think, or at least in microsoft word).

- (Requested by Anne 12-09-05)-- Make preferences work a bit better when having more than one copy of CP on a computer. E.g. if I start CP in my own copy of trunk/CellProfiler, it reads that previously I set the modules folder to someone else's trunk/CellProfiler, so it adds *their* Modules folder to the top of my path. In fact, perhaps we should not have the Modules folder be stored in the pref's anyway - it should just always be the Modules folder within the currently running CellProfiler!! -Note: Mike says the only reason we can't do this is because the Mac-compiled version of CellProfiler has no way to find the directory currently running CellProfiler. He asked matlab to fix it, so perhaps someday it will be possible. This would also prevent the annoying step where compiled mac users have to manually set the Modules directory.

PROJECTS, MOSTLY VISION/IMAGE ANALYSIS-RELATED:
-----------------------------------------------
++ (Anne 5/10/06) - IMPORTANT - The propagate algorithm works very nicely in our IdSec module. We should add this as an option for the IdPrimAutomatic module (It would be a new method for finding the dividing lines between clumped objects, along with Intensity and Distance.)

+++ Make separate Identify Secondary modules: one for bright lines and one for dark lines between objects.  Also try watershedding the gradient image rather than the original. 

++ (Requested by Anne 1-17-06) - We should make a new module to calculate the KS statistic for every image set. It would require notifying the software which images are controls (they can load this information using LoadText, as is done for the CalculateStatistics module), because this statistic compares the distribution of individual cell measures from each image to the distribution of individual cell measures from the control image(s). Once finished, we should see whether the calculated KS statistic produces a better Z' score than the 'percent above threshold' method for the BioImage cyto-nuc translocation assay. References: Chakravart LaR: Handbook of methods of applied statistics. Vol 1New york: John wiley, 1967:392-394; also Giuliano, Chen, Taylor, J Biomol Screening 2004; 9:557-568. See also Wilson, Si, Thompson, Smellie, Ashwell et al, J Biomol Screen 2005 or 2006 "Identification of a small molecule that induces mitotic arrest using s simplified high-content screening assay and data analysis method." because this has an example where KS statistics are calculated between several control images and this value is subtracted from the KS values for each image. Also, Smellie J Chem Inf Model 2005 or 2006.

++ (Requested by Anne) - right now we choose between intensity and shape (or distance) at two places in IdentifyPrimAutomatic. It might be cool to develop a more sophisticated method that allows you to balance the input of these two sources of information.

+ (Anne 5/12/06) - Add more shape measures to MeasureObjectAreaShape. The Image processing handbook has some described starting on page 513 and the Shape analysis and classification book has some starting on page 422. See also articles that Anne has: {Rodenacker, 2003 A feature set for cytometry on digitized microscopic images}{Boland, 2001 #A neural network classifier capable of recognizing the patterns of all major subcellular structures in fluorescence microscope images of HeLa cells}  Another useful feature: # of invaginations of the perimeter.  Also investigate Tchebyshev orthogonal moments, which are described in an article currently in press at Pattern Recognition, by Rajwa in Robinson's lab at Purdue. Anne has the pdf article. How about Fourier measures of shape? Is that a good idea?  Is it possible to have our shape/texture measures match up with those used my Robert Murphy's lab at Carnegie Mellon? I think already our Haralick texture features are nicely categorized using his nomenclature but it's worth checking our other measures to be sure that they are proper categories with the proper SLF numbers.
See also comments from Ray:
Hi Ray,
I just heard a talk about measuring shape in images, and the speaker
compared three inputs: the binary object, a polygon (explicit curve)
and an implicit curve (something about modeling it as a 3D curve that
crosses a plane at a certain level). THey found that the binary, due to
quantization, was particularly bad at capturing shape properties. - this
may be what jeff price was talking about when he thought that we might
be seeing a correlation of some zernikes with size. Is this an area we
ought to improve?
-a
Actually, I doubt Matlab does much more than the usual quantization
approach, but we can check.  It's probably slower to do anything with
curves or implicit curves, which would probably need to loop over
objects.  The binary masks can use the faster matrix/vector
operations. What might make sense for the Zernike and other shape measures is to
do some experiments with large shapes and progressively smaller
versions created by downsampling.  Then we can get an idea how much
those shapes vary as the resolution drops, and we might be able to
estimate ranges for those measurements, rather than just a single
estimate with no indication of its accuracy. - Ray

+++ (Requested by Anne 11-02-05) - The paper Ortiz de Solorzano, Malladi, Lockett, J Microscopy 2001 has what looks like a really nice segmentation method. I think that the only problem is that it is slow, which they were planning to address in future work. It would be nice to contact the authors to see if they have any new algorithms and implement them into CP.

+++ (Requested by Anne 9-1-06) - Sio J Microbiol Methods 2006 describes an object detection method that seems like an edge detection method we could add to FindEdges, if it seems valuable and different from what we have already. Matlab code is apparently available from the authors/supplemental material.

+++ (Requested by Anne 11-02-05) - The paper Malladi & Sethian PNAS 1995 has what looks like a really nice filter that makes objects more obvious in images with lots of noise.   It would be nice to contact the authors to see if they have any new algorithms and implement them into CP.

+++ (Requested by Anne 9-19-05) - For cytoplasmic/nuclear translocation, implement Ilya Ravkin's technique where instead of having a binary mask that denotes nucleus vs cytoplasm, there is a weighted function that is based on the nuclear stain. The Univ. Delft people have done similar work in this area.

+++ (Requested by Anne 10-31-05) - http://wiki.na-mic.org/Wiki/index.php/Main_Page has open source algorithms we could implement.

+++ Write algorithms to compare hand-traced results to CellProfiler results quantitatively, then apply them to our hand-traced data sets. [2 parts: 1) segment manual images.  2) match object to object, 3) signed distance transfer]. The next step is to allow CellProfiler to recommend automatic settings based on hand-traced images.

+ (Requested by Anne 10-13-05) - There is a fairly simple routine in Janssens, et al., Dev Genes Evol 2005 (215:374-381) for drosophila cells in embryos. It might be fun to implement this routine into a CP pipeline.

+++ (Requested by Anne 8-23-05) - Try to get yeast identification working for phase contrast images - we set up something for SErge Pelet, but haven't really gone at this application in a systematic way - a lot of people want this and I think it's doable but we just haven't put in the effort. IdentifyPrimYeastPhase was one attempt, but it's very empirical and not very adjustable for other images. In fact, it doesn't even work well at the moment for the original images, from Ben 03_25_2005.  Check into the literature for better methods or try to get that method working. Not sure if these references are for fluorescence or phase images: SCMD: Saccharomyces cerevisiae Morphological Database. Nucleic Acids Res. 2004 Jan 1;32 Database issue:D319-22. PMID: 14681423. Perhaps more promising is the paper Coelho, M, Ferreira et al, Applied Microbial and Cell Physiol, 2004, where they mention having Matlab code to accomplish yeast cell segmentation (Anne has this paper). NEWS FLASH: Roger Brent has code available from his Nature 2005 paper, also probably to be published in a Nature Methods paper. The algorithm is pretty simple - it seems to be automatic thresholding, hole filling, but separating mother from daughter, or clumped cells, is done by some mechanism I can't quite understand.  

+++  (Requested by Anne) - Implement the algorithm for in vitro angiogenesis from  IEEE Trans Med Imaging. 2005 Apr;24(4):549-53. Robust quantification of in vitro angiogenesis through image analysis. Niemisto A, Dunmire V, Yli-Harja O, Zhang W, Shmulevich I

+++  (Requested by Anne) - Implement the algorithm for migration analysis from Qin J, Chittenden TW, Gao L, Pearlman JD.	 Automated migration analysis based on cell texture: method & reliability. BMC Cell Biol. 2005 Mar 3;6(1):9. 

+++ (Anne 4-21-06)  Implement the algorithm from Shen, Nelson, Kennedy et al: Automatic tracking of biological cells and compartments using particle filters and active contours, Chemometrics and Intelligent Laboratory Systems, in press. At least try implementing the object-identification algorithm into IdentifyPrimAutomatic, but perhaps do the kinetic (time-lapse) part too.

+++ (Requested by Anne 2-14-06) -  Implement the algorithm from: IEEE Trans Inf Technol Biomed. 2006 Jan;10(1):5-10. A new detection algorithm (NDA) based on fuzzy cellular neural networks for white blood cell detection.  Shitong W, Min W.

+++ (Requested by Anne 9-28-05) - Build some kind of module that allows interfacing with ImageJ so that routines built for ImageJ (open-source, written in Java) can be run in CellProfiler??  In other words, CellProfiler would use ImageJ as a backend. No idea how complicated this would be. See practice ImageJ integration ideas below (two of them):
* Simplest: Add a nice alignment (image registration) algorithm from ImageJ that can be found at: http://bigwww.epfl.ch/algorithms.html, which is referenced in Sage IEEE 2005 as one of the best. Make sure it isn't the same as the algorithm we already have in Align.m!
* Implement the algorithm for identifying objects based on granulometry from Prodanov, Heeroma, and Marani, J Neuroscience Methods 2005. The code may be available from the authors directly, or supplemental journal data, or from ImageJ.
* If we want to extend CP to analyze 3D images, there is a good example available here: Gue, Messaoudi, Sun, Boudier Cytometry 2005 on Smart 3D-FISH. It's available as an imageJ plug in.

+++ (Requested by Anne) - Make modules to identify objects in transmitted light/DIC images. Potentially useful references: Heise, Sonnleitner, Klement, Microsc Research & Technique 66:312-320 (2005).  This paper looks like it has a few options for ways to pre-process DIC images to end up with images that look more like fluorescence images which can then be processed using our normal Identify algorithms. This one might also help: Kam, Bioimaging 1998 on line integration and deconvolution of DIC images which would be a cool filter to implement that might allow people to analyze DIC images.

++ (Requested by Anne) - Align/resize a stack of images (like yeast plates). See Matlab demo on image registration.

+++ (Requested by Anne) - Implement Neurite tracing algorithm: see potentially useful references, which Anne has: 
* J Neurosci Methods. 2005 Sep 17; Automated identification of axonal growth cones in time-lapse image sequences. Keenan TM, Hooker A, Spilker ME, Li N, Boggy GJ, Vicini P, Folch A.  
* Weaver_NeuralComput_2004.pdf
* Weaver_JNeuroMeth_2003.pdf. 
* See also Anne's emails from Weaver and Brent Lindquist and John Pinezich.
* Xiong Cytometry 2006 might be the best; C++ code available from authors.

+++ (Requested by Anne): enhance/expand the TrackObjects module:
- Right now, an intensity image is retrieved/stored even if we are using size or distance matching, which as far as I can imagine, do not require intensity information. We should instead allow the user to choose (1) distance, or (2) any measurement in handles structure so that they can choose size, intensity or anything else they want. Grabbing code from the FilterObjects byMeasurement module should be helpful for this.
- There is a line marked %%%%%%%%%%%%SOMETHING HERE IS WRONG%%%%%%%%%%%%%%%%% and I don't know why it's marked that.
- The window says Tracked Objects rather than the actual name of objects (e.g. Tracked Nuclei).
- I think the figure window into which the numbers on top of the objects are placed is not well-specified because if you close windows, they start appearing all over the place!
- I think the module should output objects (rather than an image), because then you can use the convertObjectToImage module with all its options.
- Check through the rest of the code because there is a lot of junk stored in handles.Pipeline.TrackObjects that might not need to be. Also, be sure that things stored in handles are in the right place (handles.Previous and handles.Current are BAD places, for example!). I already took out some bad storage of things in the UserData of the figure window, which causes things to fail if the window is closed, or if you are running on the cluster.
- The Stats option of TrackObjects is incomplete. Things like size grown, displacement, intensity, etc. .... can be done fairly easily. Alternately, we might instead have a MeasureChange module to be used in conjunction with this module that allows you to calculate the Change in a specified measurement.
- Can we add some magic for splitting/merging when necessary? 
- Options for abandoning objects if they disappear or or not present throughout the entire movie, etc? 
- We should make it optional to show/hide the numbers on top of objects in the display window (I think the numbers can't be saved on the image because it's tough to make matlab save text data on images).
- Good references for other tracking methods:
1 - Sbalzarini Koumoutsakos J Struct Biol 151 (2005) p 182 has fairly complicated free code in C, although a license of some sort is required.  Also, in there there is a reference to Cheezum BioPhys J 2001, 81, 2378-2388 having several algorithms implemented and compared.
2- Debeir,  Decaestacker IEEE TRans. Medical Imaging vol 24 no 6 June 2005. I don't really understand the algorithm in this one.
3- Miura Adv Biochem Engin/Biotech 2005 95:267-295 is a nice overview.
4- See also Niven, Fuks, J MIcrobiol Methods 2005 where they feed XY locations into a program they wrote called ObjectTracker, which might be helpful.
5- Schiffman...Goldberg (2006) Biotechniques 41(2) 199 has a section, middle of page 200 that gives several references for tracking methods that are more complex than the simple one implemented in the paper itself (nearest-neighbor).

++ (Requested by Anne) - Implement the cubic B-spline illumination correction method in Wahlby, Anal Cell Pathol 2002 p. 101. Its use is described in Xiong Cytometry 2006 (Anne has these articles in pdf format), and their source code (in C++) is available upon request. This seems like it would fit very nicely as another method (the variable where we normally choose Fit polynomial, or smooth by a particular artifact width).

+++ (Requested by Anne) - New algorithm to calculate colocalization. Ask Ray if it seems like a good idea. One part of the paper is simply describing the concept of masking the image for the region of interest (ROI) prior to calculating the correlation coefficient, which we already do. But the second part is a different calculation which may be superior to the one we use, but not sure: Jaskolski, Mulle, Manzoni J Neurosci Methods 146(2005) 42-49. The matlab code is apparently available from the authors.

++ (Requested by Anne 11-01-05) - There are many ways to measure the best focus of an image. Right now our MeasureSaturationBlur module has only one of these methods. Implement many of the focus methods in this paper, and have the 'best'/fastest one be the default: Sun, Duthaler, Nelson, Microscopy Research & Technique 2004 (Anne has the pdf of this).

+++ (requested by Anne 9-19-06) - Adiga, IEEE trans on Image Processing vol 15 no. 8 August 2006 has a nice IdentifyPrim algorithm which we might want to implement.

+++ (Requested by Anne) - RAY PROBABLY HAS ALREADY ACCOMPLISHED THIS WITH BELIEF PROPAGATION: Improve foreground/background determination, i.e. automatic thresholding, i.e. background/cell edge finding. Right now, thresholding is a real problem for us. Ask Ray for advice. 
IDEA 1:
Make the background correction based on Each image (rather than All images) a little more sophisticated as follows: Cell segmentation and llumination correction can be made simultaneously for best result.  The usual procedure is as follows (the technique is called Expectation Maximization segmentation):
* Segment cells
* Estimate illumination variation from the background and correct the original image
* Re-segment cells
* Re-estimate illumination variation from the background and correct the original image
* Re-segment cells
* Repeat until convergence.
* The iterations can be performed on a low-resolution version of the original image, e.g. 200x200 pixels, so I don't think it's time-consuming.  This will involve figuring out how to call a downstream Identify module to use the settings and code from the downstream module (otherwise we'd have to build background subtraction into every identify module). 
IDEA 2:
This paper has many thresholding functions implemented. We could add many of them to CP, or at least the best one: Rajagopalan, Lu, Yaszemski, Robb, J Biomed Mater Res 2005. When finished, we should compare to current results and see if it improves things. 
IDEA 3:
Implement Jeff Price's FIR filter idea? (Price, Hunter, Gough Cytometry 1996), although we need to mark with a disclaimer that it's for academic purposes only because for commercial use, it's patented, and also Jeff says it does not deal with clumpy objects, so I guess it's for thresholding only, it is not a complete segmentation solution. 
IDEA 4:
(anne has a copy): {Sezgin, 2004 #Survey over image thresholding techniques and quantitative performance evaluation, Journal of Electronic Imaging}

+++ (Requested by Anne 9-14-05) ASK RAY IF THIS IS A USEFUL THING - Implement Bob Murphy's classification algorithms into CP?  These algorithms compare images of protein localization and can tell you which compartment a protein is localized in.  See Chen, Murphy, J Biomed/Biotech 2005 87-95.

+++ (Requested by Anne) - Reproduce the major 'big pharma' screening assays: (from Bowen and Wylie, Assay & DrugDvpmnt Tech 2006) PROBABLY WE CAN DO MOST OF THESE ALREADY - WAIT UNTIL A PARTICULAR APPLICATION IS NEEDED>>>
cell adhesion
Neurite outgrowth
micronucleus formation
protein translocation
cell cycle analysis
cell colony formation
cell differentiation
adipogenesis
reporter gene analysis
cell viability
cell spreading
cell proliferation
apoptosis
microtubule formation
receptor trafficking
protein kinase activation
mitotic index
proteasome activity
oligosaccharide synthesis
cell migration
membrane potential
gap junction formation
p-glycoprotein activity
angiogenesis

+++  (Requested by Anne) SHOULD PROBABLY WAIT UNTIL WE HAVE A PRACTICAL USE FOR IT!! - Make a user-scoring module that allows the user to view and annotate each image manually. Show control side by side (1-4 at a time) and add that assessment to the data structure. Maybe allow randomizing (to do blind tests). Allow clicking through. Could also be used just for viewing images (e.g. every third image in a gigantic image set).  Whether the file name and/or sample info is shown should be optional. 

+++  (Requested by Anne) - Allow data to be exported to Open Microscopy Environment databases.  (WAIT ON THIS - Being worked on by Tony Scelfo in Peter Sorger's lab).