function generateOutLines(scores,outputFile,scale)
%% using scores generated by a learning Manager run, outputs lines for which the score is greater than 0

out = fopen(outputFile,'w');

common_size = size(scores{end});
max_score = zeros(common_size(1),common_size(2));
max_angle = zeros(common_size(1),common_size(2));
max_size = zeros(common_size(1),common_size(2));
for i=1:length(scores)
  if(isempty(scores{i})); continue; end
  cur_score = scores{i};
  
  [h w a] = size(cur_score);
  startx = floor((w-common_size(2))/2)+1;
  endx = ceil((w-common_size(2))/2);
  starty = floor((h-common_size(1))/2)+1;
  endy = ceil((h-common_size(1))/2);
  cur_score = cur_score(starty:end-endy,startx:end-endx,:);
  [maxCur,maxCurAngle] = max(cur_score,[],3);
  toReplace = maxCur>max_score;
  max_score(toReplace)=maxCur(toReplace);
  max_angle(toReplace)=maxCurAngle(toReplace);
  max_size(toReplace) = i;
end

for xx = 1:common_size(2)
  for yy=1:common_size(1)
    if(max_score(yy,xx)<=0); continue; end
    curAngle = max_angle(yy,xx);
    curSize = max_size(yy,xx);
    x1 = scale*xx-sind(curAngle*10)*curSize;
    y1 = scale*yy-cosd(curAngle*10)*curSize;
    x2 = scale*xx+sind(curAngle*10)*curSize;
    y2 = scale*yy+cosd(curAngle*10)*curSize;
    fprintf(out,'%.2f %.2f %.2f %.2f %.2f %.2f\n', ...
      x1,y1,x2,y2,curAngle,curSize);
  end
end

fclose(out);
