CellProfiler cell image analysis software development 
AUGUST 23, 2005  IN ORDER OF PRIORITY

[[[NOTE: WE WILL BE COMBINING ALL OF THE IDENTIFY MODULES INTO A SINGLE MODULE IDENTIFYEASY SOON]]]

- (Requested by Colin) - The measure modules create an error when a label matrix with an object completely missing is given to it.  We took care of this by making Identify modules create a single pixel if an object is missing.  It would be nice to allow objects to be missing in measurement modules.  Also, once the measurement modules are working, make sure it is possible to export the data to excel.

- (Requested by Anne) - There is a general popupmenu bug: for example, in ImageTiler, if I load this module after loading other modules (like SaveImages) and leave the default "TiledImage" as it is, this 'TiledImage' option does not automatically show up in the SaveImages module as an image I can choose. The workaround is simply to click on the TiledImage text in the  ImageTiler module. This refreshes the popup menu in the saveimages module so that the TiledImage can now be selected. Another popupmenu bug: To reproduce, first add for example IdentifyPrimIntensIntens to the pipeline, close the add module window, and then add for example the LoadImagesText module. Move the LoadImagesText module to the top. Now it is still not possible to choose an input image in the IdentifyPrimIntensIntens module. This problem might have the same root case.

- (Requested by Anne) - Variable bug: To reproduce, make a pipeline of LoadImagesText, then IdentifyPrimIntensIntens, then MeasureAreaShape. In MeasureAreaShape, choose Cells in the first slot. Then go to Identify module and change the objects to be identified from Cells to Nuclei. When returning to MeasureAreaShape, you will see that what was previously set to Cells has automatically changed to Nuclei. In my view, this is unanticipated behavior and should not happen. It ought to stay set to Cells until you change it (even though Cells will not exist and the pipeline will fail, at least it is the user's fault and they can figure out the problem).  The worse problem (other than it being unanticipated) is that when you actually run the pipeline, the MeasureAreaShape module still goes looking for Cells rather than Nuclei, so it fails. This part of the error can be prevented by going to MeasureAreaShape and re-selected Nuclei, even though that is the option that's already chosen. So, re-selecting it seems to embed the proper choice into the handles.

- (Requested by Anne) - variable bug: for IdentifyPrimIntenIntens (and possibly other modules), there is a problem with the variable - what do you want to call the labeled matrix image?  Typing in a custom entry using the 'Other...' option yields an error. See that module for more details on the error produced.  Perhaps we decided that this bug is not worth fixing, in which case remove the comments there and convert any other similar situations in other modules so that this error does not occur.  Note: We have replaced IdentifyPrimIntenIntens with IdentifyEasy recently. We still want to fix the problem because a similar thing occurs in IdentifyEasy but you will still want to take a look at the code in IdentifyPrimIntenIntens because the bug is described in detail in there (see Outdated folder).

- (Requested by Anne) [[[Ola might be able to help on this - Anne emailed him monday]]] - On the windows machines that Stephanie & Monica & Winston use over at CSAIL, the windows appear off the top of the screen for some reason. It was only a problem for the Identify modules and RGB Split module but not Crop and Measure modules.  I've no idea whether it's related to the CPFixAspectRatio function (based on the 4 modules I checked there is a correlation, but it's not definitive). We should figure out what the point of CPFixAspectRatio is and document its code with some help to describe it.  We may also need to incorporate it throughout the code - some modules use it and others don't, so we ought to make things consistent.  Also (a separate issue, i think), error/help box text didn't fit in their windows and so was not visible. 

- (Requested by Anne) - Put in the help menus for ImageTools and DataTools.

- (Requested by Anne 8-23-05) - Go through the code looking for instances of the term "image set" and replace with "cycle" where appropriate.

- (Requested by Anne) - There is a file in the DeveloperDropBox called MeasureDescriptions. These descriptions should be spliced into the help for the measure modules.

- (Requested by Anne) - SaveImages is not actually checking to prevent overwriting existing images, even when you have the variable set to dooublecheck.

- (Requested by Anne) - cvs remove Profiler for Anne folder from the DeveloperDropBox. removing a directory requires a special procedure - i don't know how.

- (Requested by Anne) - Make ImageTiler produce a button in the final figure that allows retrieval of a high resolution image. (Click the button, then click the part of the image you want to see in more detail). There should also be a button that allows you to select the folder where the images are stored so that the high-res button knows where to go to look for the images, in case they are not in the same place they were when the figure was originally made.  Adjust the help if ImageTiler to reflect this change when it's made.

- (Requested by Anne) - Put in some way to save a figure (either a module or ImageTool). (Anne thinks the best approach is to adapt SaveImages module and SaveImageAs image tool to be able to save .fig format).

- (Requested by Anne) - the IdentifySecPropagatesubfunction needs to not show up in the AddModule window.  Is there a smart way to make it not appear?  perhaps we should exclude any files ending in "subfunction" in case we have other similar situations in the future.

- (Requested by Anne) - Combine all IdentifySec options into one module.

- (Requested by Anne) - Combine Load Images and Movies (including Order & Text versions) into a single module.(I think this would be great, but maybe there are compelling reasons not to do it).  At the moment, the code which determines which files in the image directory are shown in the list box in the main CP GUI is weeding out movie file types, I think.  Also, the LoadImagesText module lists only 6 file formats that can be read. This list of file formats that appears in its popupmenu should be retrieved from CPimread.

- (Requested by Anne) - Make spot identifier crop out the background to just leave the plate. [Actually, Anne thinks we should adapt the Crop module to take in an object  (ie. the plate) identified by one of the identify modules and crop based on that object (anything outside the object becomes black).  The result of this can then be fed to the SpotIdentifier module].

- (Requested by Anne) - Put RGBsplit and RGBtoGray a single module (like IdentifyPrim AdaptThreshold - But does that work?). Call the resulting module RGBtoGray and move RGBSplit to Outdated.

- (Requested by Anne) - Make measure windows expand to fit the number of lines of data that are produced. Maybe try using CPtextdisplaybox.m, which displays text using a slider so it's infinitely expandable.

- (Requested by Anne) - Make a module to identify and count and measure objects within previously identified objects (e.g. nucleoli or
organelles or speckles within nuclei or cells).
This also requires designing a way to store measurements of Subobjects. Here's Ola's suggestions:

	From: 	  friman@bwh.harvard.edu
	Subject: 	Storing subobjects
	Date: 	August 13, 2005 3:03:31 PM EDT
	To: 	  carpenter@wi.mit.edu

One simple way to store subobjects that fits into the current way
of saving measurements is simply to have a "feature/measurement" that
indicates the number of the parent object.
For example, to have a structure handles.Measurements.Nucleoli that in addition
to the usual measurements contains a handles.Meaurements.Nucleoli.Parent field
where the number of the corresponding parent object is stored, and a handles.Measurements.Nucleoli.ParentFeatures
which indicate the name of the parent (e.g. 'Cells' or 'Nuclei'). It is not straightforward to have a
similar entry for the parent objects since the parent objects (e.g. Cells) can have
a different number of children (while each child only has one parent object). Storing the numbers of the
children of a parent is not straightforward in the current measurement system, because the parent
objects can have a different number of children. This would require storing a cell array with
the numbers of the children for each parent object, and that would
cause problems for all data tools that don't know how to handle this cell array when
they encounter it. However, I guess there can be a handles.Measurements.Cells.Children field which contains
the names of the children objects (e.g. 'Nucleoli', 'Organelles', 'Speckles'....) but not corresponding numbers.
If one wants to find the children of a  certain Cell object with number K, one must then look in
handles.Measurements.Cells.Children to find the  name of the children (e.g. 'Nucleoli', 'Organelles', 'Speckles'....)
and then search e.g. handles.Meaurements.Nucleoli.Parent for the Nucleoli objects that have object K as parent.
It think it would be quite simple to introduce the above system in the IdentifyPrimary/IdentifySecondary/IndentifyTertiary
way of identifying objects.

Best,
Ola

- (Requested by Anne) - For the Data Layout tool, the help is not extensive. Check an old version of the tool and salvage some of its help.

- (Requested by Anne) - Whenever anything is saved to the hard drive, add an error
       check to see whether the user has permission to write to that
       location (esp. CellProfiler.m and AlgSaveImages.m). From within the target directory, run:
       [ignore,Attributes] = fileattrib, if Attributes.UserWrite == 0,
       then error(INSERT PROPER ERROR STUFF HERE), end 

- (Requested by Anne) - Move the help contents of IdentifySecPropagateSubfunction to the help for 
 IdentifySecPropagate and then remove IdentifySecPropagateSubfunction.m from cvs (i.e. delete it), because it contains no code but appears as a module to load in the pipeline when you click the AddModule button.

- (Requested by Anne) - Save Image As tool: does not work well for all kinds of
       displayed images (e.g. The mean image produced by correct illum
       divide all mean comes out weird). Test it with a bunch of image outputs and make it more compatible.

- (Requested by Anne) - When figures produced by SpotIdentifier are saved as matlab fig files and opened later, when CellProfiler itself is not open, and then you click on SpotIdentifying Info - Show, an error is produced (at least when no spot identifying info has been loaded):
??? Error using ==> guidata
H must be the handle to a figure or figure descendent.
Error in ==> CPmsgbox at 198
handles = guidata(findobj('Tag','figure1'));
Error in ==> CPwarndlg at 42
handle = CPmsgbox(WarnStringCell,DlgName,'warn',Replace);
??? Error while evaluating uicontrol Callback.

- (Requested by Anne) - SaveImages module - have a way that you can type in special formatting. E.g. if you are going to save in gif mode, you should be able to type in the optional parameters like 'BackgroundColor',0 into a text box and have that text appended within the imwrite command.

****************
- (Requested by Anne) - Many of the identify modules produce object outlines on top of the original image. I would like to change all of these so that the outlines only (without the underlying grayscale image) are saved in the handles structure (maybe as logical/binary images?) and then you can overlay them on an image using a separate module. This allows more flexibility. (for example, identify well spots doesn't know what the 'original image' is so it can't display outlines on an original image). It also reduces the size of the image stored in the handles structure, since it would be a logical format rather than full 8 bit, but that's a minor advantage. To accomplish this, we should make a module 'AddImages' that can add two images' pixel values in the normal manner but also has an option to make one of the images' nonzero values be either (a) the maximum allowed value for a particular image format (e.g. 255 for 8 bit images) or (b) the maximum of the grayscale image (e.g. if an image has values from 0 to 0.17, the binary outlines would be assigned the value 0.17). We have already made this change for IdentifyEasy but we need to do a similar thing for the other IdentifyPrim and Sec and Tertiary modules (there is currently a push in progress to merge all identifyprim modules into IdentifyEasy and all IdentifySec modules into one, so perhaps check that first).
This also affects the "SAVING IMAGES" portion of the help for each module, so update the other modules' help using IdentifyEasy's as a template.

- (Requested by Anne) - In a similar manner, many identify modules produce a label matrix image and there is an option to save this image in colored label matrix format. I'd like to take this feature out of each individual identify module (it adds another image to the handles structure which takes up space) and instead have the SaveImages module have an option to convert a label matrix to color. Perhaps we can then also have an option in SaveImages to choose the colormap to be used for this conversion. It's useful to take it out of each individual identify module because it's not very common that someone actually wants to save or use the colored label matrix downstream. It's usually just for display purposes during processing. This also is one less thing to make sure is present in every Identify module.

- (Requested by Anne 8-24-05) I HAVE STARTED ADDRESSING THE ABOVE CONCERNS IN THIS MANNER - I have written QuickFixConvertObjectsToImage module. We should develop this further so that it can be used to convert objects into images that are savable by SaveImages. It should also be able to convert objects to images in order to pass them down the pipeline (because if you wanted to process a label matrix image downstream, you can't select its object name in downstream modules because only imagegroup members are selectable in downstream modules). The ability to use this module with the SaveImages module will replace the last few variables and related code from each individual Identify module which will be more streamlined. This module should include options (1) convert entire objects or just outlines, (2) binary, grayscale in range 0 to 1 (be sure to think about what happens if there's more than 256 objects), or RGB. For RGB, allow the user to choose which colormap (e.g. jet, bone, autumn, etc).  We might even include an option to allow overlaying outlines on some image, because that's really handy.

********************

- (Requested by Anne) - RenameOrRenumberFile behaves weirdly when trying to rename and renumber.  For example, for the file IMG_0760.JPG I tried these settings: # characters beginning = 4, # characters at end = 4, any text to add = /, characters for renumbering = 5.  I expected this to yield IMG_00760.JPG, but instead it yields: IMG_00000.JPG  Likewise, # characters for renumbering = 3 should yield IMG_760.JPG but instead it yields IMG_000.JPG.

- (Requested by Anne) - It would be nice to allow CellProfiler to be used by different people and each one could have their own user preferences.  Right now preferences can be saved (File > Save preferences), but we should allow the user to choose whether to save these preferences as the default preferences (in CellProfilerPreferences.mat), or alternately, to name the preferences file something unique (e.g. AnneCellProfilerPreferences.mat). Then the user could load their preferences by using: File > Load preferences.

- (Requested by Anne) - When Saving a pipeline, after you confirm the filename change (adding SET or PIPE to the name), it asks if you want to save the pipeline as a text file. If you click yes but then cancel at this stage, you don't get the dialog box confirming that the pipeline file itself was saved. I guess the best thing to do is after confirming the filename of the pipeline itself, the confirmation window should appear that it was saved and a separate confirmation window should appear if you save as a text file.  Also, in all of the dialog boxes relating to this function, we should refer to the 'settings' as 'pipeline' instead, to be consistent.

- (Requested by Anne) - The error dialogs are not proper CP color. Also, in several places, we use the helpdlg Matlab function and so the color of the resulting help dialog window is not the proper CP color.

- (Requested by Anne) - Add a happy dialog box that shows while CellProfiler is loading.  Include the CellProfiler logo, 'CellProfiler is starting up...' text, the authors & contributors, etc.

- (Requested by Anne) - In SaveImages, have the file format in which to save images be a popupmenu based on what is compatible with the imwrite command of matlab, plus .mat files. If possible, this list should be automatically obtained (in the same way that typing imread or CPimread lists the file formats), but i don't know if imwrite yields a list like that. Or maybe it's the same list as imread.

- (Requested by Anne) - The CreateWebPage module needs help documentation and to be put in the category 'Other', and the license info, etc.  If there is nothing of interest to display in the figure for this module, it ought to close during the first cycle. The popup window is the wrong color at the end after the html file is saved.

- (Requested by Anne) - Test each modules on color vs grayscale and make sure they all work or have some type of error catching.

- (Requested by Anne) - The RGB buttons on CPfigures produce an error at the command line when the figure is only displaying text. It should either produce a warning dialog stating what the RGB buttons are for and that there is no image in the window, or it should just do nothing.
??? Error using ==> set
Index exceeds matrix dimensions.
??? Error using ==> set
Error while evaluating uicontrol Callback.

- (Requested by Anne) - It would be nice if the Crop module would allow you to freehand draw a rectangle (rather than an ellipse) on each image as it cycles through.

- (Requested by Anne) - In File > Open Image, underscores in the file name are not displayed as underscores - instead they make the character after the underscore appear as a subscript. We have fixed this elsewhere (I think in the histogram tool).

- (Requested by Anne) - The help box that opens when you click for information about a specific module has a scrollbar when the text is very long. The window is re-sizable, but resizing doesn't allow the text to wrap around nor does it allow any more text to be viewed. We should either allow things to wrap in a more sophisticated way, or we should make the window non-resizable.

- (Requested by Anne) - There is a bit of functionality in IdentifyPrimThreshold which is lost in IdentifyEasy: the ability to calculate a threshold based on all images of a given type and then apply that global threshold to each image.  This ought to be added to IdentifyEasy.

- (Requested by Anne) - right now we choose between intensity and shape (or distance) at two places in IdentifyEasy. It might be cool to develop a more sophisticated method that allows you to balance the input of these two sources of information.

- (Requested by Anne) - Can IdentifyLaplacianOfGaussian be merged into IdentifyEasy?

- (Requested by Anne) - Adapt MeasureAreaOccupied to use the same threshold options as are in IdentifyEasy.

- (Requested by Anne) - Implement the following threshold calculating stuff as described in the help for IdentifyEAsy:
% Threshold correction factor:
% When the threshold is calculated automatically, it may consistently
% be too stringent or too lenient.  For example, the Otsu automatic
% thresholding inherently assumes that 50% of the image is covered by
% objects. If a larger percentage of the image is covered, the Otsu
% method will give a slightly biased threshold that may have to be
% corrected. In a future version, the 'Threshold correction factor'
% may be removed and the "Approximate percentage covered by objects"
% information used instead.  For now, however, you may need to enter an
% adjustment factor which you empirically determine is suitable for
% your images. The number 1 means no adjustment, 0 to 1 makes the
% threshold more lenient and greater than 1 (e.g. 1.3) makes the
% threshold more stringent.

- (Requested by Anne) - In the CreateWebPage module, move the link for the zip file to the top of the page so it's more visible.

- (Requested by Anne 8-23-05) - The Histogram DataTool spits out the value "Suffix" at the command line in the first few steps of using the tool.

- (Requested by Anne 8-23-05) - Make sure all code is using CPfigure rather than figure. I think the DataLayout tool in particular is using figure.

- (Requested by Anne 8-23-05) - Make the ApplyThresholdAndShift an option within ApplyThreshold. Give the new combined module sophisticated options for automatic thresholding (see IdentifyEasy for thresholding code).

- (Requested by Anne 8-23-05) - The Cancel & Close CellProfiler doesn't seem to work.

- (Requested by Anne 8-23-05) - LoadMoviesText doesn't work when loading two .stk movie files - it fails at line 456, looking for 'FileNames'. Doublecheck that LoadMovies Order works too.  ---> UPDATE: Anne fixed the bug very quickly in LoadMoviesText new revision: 1.17; previous revision: 1.16. You can see the changes that were made by diffing those two revisions. Make sure that LoadMoviesOrder works and if not, hopefully those bug fixes in LoadMoviesText will show you what to do to repair LoadMoviesOrder. 

- (Requested by Anne 8-24-05) - All errors encountered within modules (and maybe also data/image tools, though I am not certain about that) should use error('error message goes here'), *not* errordlg(''), return. We should check through the code and make sure errors are handled properly, and add this detail to the programming notes.

- (Requested by Anne 8-23-05) - Try to get yeast identification working for phase contrast images - a lot of people want this and I think it's doable but we just haven't put in the effort. IdentifyPrimYeastPhase was one attempt, but it's very empirical and not very adjustable for other images. In fact, it doesn't even work well at the moment for the original images, from Ben 03_25_2005.  Check into the literature for better methods or try to get that method working. Not sure if these references are for fluorescence or phase images:  SCMD: Saccharomyces
       cerevisiae Morphological Database. Nucleic Acids Res. 2004 Jan
       1;32 Database issue:D319-22. PMID: 14681423  
Perhaps more promising is the paper Coelho, M, Ferreira et al, Applied Microbial and Cell Physiol, 2004, where they mention having Matlab code to accomplish yeast cell segmentation (Anne has this paper).

- (Requested by Anne 8-24-05) - The SaveImageAs ImageTool gave this error when I tried to use it on a IdentifyEasy figure window that was saved as a matlab fig file and then reopened later:
??? Invalid handle object.
Error in ==> SaveImageAs at 29
    MainWinPos = get(handles.figure1,'Position');
??? Error while evaluating uimenu Callback.

- (Requested by Anne 8-24-05) - The ShowDataOnImage ImageTool is very buggy lately. In particular, it can't seem to look up the image filenames.

- (Requested by Anne 8-24-05) - The FilterObjectsAreaShape window should have the bottom left and top right displays switched in their positions (the final filtered image should be in the top right and the outlines on input image should be at the lower right.)  Why is there an input image for this module?  Is it only for showing the outlines on the original image? If that is the case, it should be made optional. FilterObjectsAreaShape needs full documentation and to be made to look like all the other modules, and it needs its method for saving outlines and colored images to be consistent with other modules (like IdentifyEasy).  I think we also need a FilterObjectsIntensity and FilterObjectsTexture module (the last one is probably not going to be used much, but it's just to be complete).

- (Requested by Anne) - Try to compile the Matlab code so CellProfiler can be run on computers that don't have Matlab.

- (Requested by Anne) - Look over the changes suggested in TempMattTudor. He said there were a couple of bugs that he fixed.

[Do the following prior to releasing:  (Requested by Anne) -
- Make the download new modules work.
- Smart Indent
- M Lint error checking
- Check for TODO's
- Test every module & button
- Especially, try canceling and closing & opening figure windows
- Prepare updated manual
- Make reference sheet with short descriptions of the modules.
- Make "applications" technical notes and automatic settings
       files to give a good starting place for common applications
       (e.g. cell count, yeast colony count, staining intensity, cell
       cycle, nuclear/cytoplasmic translocation) and for common cell
       types. 
- Design an informational brochure
- Make a tutorial to demonstrate how CP is used.]

---------------------------------------------------

POST-PUBLIC RELEASE SUPPORT:

     - Monitor imaging newsgroups and inform people about the software
     - Provide technical support/help desk
     - Fix bugs
     - Maintain for new releases of OS's and Matlab
     - Check Matlab Central for useful code to incorporate into
       CellProfiler or its modules (last checked on 9-16-04:
       Biotech/medical, Graphics (all 3 categories), Image Processing,
       Utilities - GUI Tools & examples, and Misc.) 
     - Organize training workshops
     - Present at conferences

---------------------------------------------------
LONG-TERM:

GUI 1  (Requested by Anne) -(Joo Han might work on this) +++ Histogram DataTool is kind of hacked together at the moment. Streamline it and update its help; possible other improvements: allow fewer labels, plus fewer decimals (right now, it's either-or). If you choose option P (percentage) rather than N (number), the y axis is still labeled 'Number of objects' rather than 'percentage of objects'.

GUI 3 +++  (Requested by Anne) -Make sure the ManualCompiler still works (in DeveloperScripts). Make the help/manual prettier: For each example image that is just text, type the text into the help for that file instead of referring to the image, because as it is these images are stretched a lot.

- (Requested by Anne) - Make it possible to use data from previous modules as the arguments of later modules.  Also make it possible for entire modules to be entered as arguments (with all their individual variables).  For instance, it would be nice if spot identifier took in an identify module that could identify each spot specifically and then create a grid to match it.

---------------------------------------------------

PROBABLY DO NOT WANT TO INVEST TIME IN THESE:

VISION 2 +++  (Requested by Anne) -Improve foreground/background determination for the IdentifySecPropagate module.  Ask Ray for advice. Here is one idea:
Make the background correction based on Each image (rather than All images) a little more sophisticated as follows: Cell segmentation and llumination correction can be made simultaneously for best result.
The usual procedure is as follows (the technique is called Expectation Maximization segmentation):
Segment cells
Estimate illumination variation from the background and correct the original image
Re-segment cells
Re-estimate illumination variation from the background and correct the original image
Re-segment cells
Repeat until convergence.
The iterations can be performed on a low-resolution version of the original image, e.g. 200x200 pixels, so I don't think it's time-consuming.  This will involve figuring out how to call a downstream Identify module to use the settings and code from the downstream module (otherwise we'd have to build background subtraction into every identify module). 

++  (Requested by Anne) -Implement the algorithm for in vitro angiogenesis from  IEEE Trans Med Imaging. 2005 Apr;24(4):549-53. Robust quantification of in vitro angiogenesis through image analysis. Niemisto A, Dunmire V, Yli-Harja O, Zhang W, Shmulevich I

++  (Requested by Anne) -Implement the algorithm for migration analysis from Qin J, Chittenden TW, Gao L, Pearlman JD.	 Automated migration analysis based on cell texture: method & reliability. BMC Cell Biol. 2005 Mar 3;6(1):9. 

+++  (Requested by Anne) -Make a user-scoring module that allows the user to view and
       annotate each image manually. Show control side by side (1-4 at
       a time) and add that assessment to the data structure. Maybe
       allow randomizing (to do blind tests). Allow clicking
       through. Could also be used just for viewing images (e.g. every
       third image in a gigantic image set).  Whether the file name
       and/or sample info is shown should be optional. 

+++  (Requested by Anne) -Allow data to be exported to Open Microscopy Environment
       databases.  (Being worked on by Tony Scelfo in Peter Sorger's lab).

+++  (Requested by Anne) -Port to python so we don't need to use Matlab anymore.

+++  (Requested by Anne) -Binucleate cells: figure out how to identify and count them

+++  (Requested by Anne) -Make modules to identify objects in transmitted light/DIC images.

+++  (Requested by Anne) -Align/resize stack of images (like yeast plates). See Matlab
       demo on image registration. Did Chris already do this? 

+++ (Requested by Anne) - Neurite outgrowth module

+++  (Requested by Anne) -Particle tracking over time module

- (Requested by Anne) - Add background masking to the identify sec distance module
       (make it optional in case a cell stain image is not
       available). 

[ASK RAY IF THIS IS WORTH IT (HE SAYS PROBABLY NOT)]>>>>
- Adjust ModuleNames or VariableValues so that their dimensions match (if possible). E.g. the following example has 6 modules loaded, so it would make more sense if VariableValues was a 13 x 6 cell rather than 6 x 13, so that all four Settings have 6 columns.
Settings =      ModuleNames: {1x6 cell}
             VariableValues: {6x13 cell}
         NumbersOfVariables: [13 6 5 6 4 8]
    VariableRevisionNumbers: [2 0 1 0 1 1]
*Note: This requires editing almost all the modules, while this improvement is not absolutely necessary; the time cost should be considered.

[ASK RAY IF THIS IS WORTH IT (HE SAYS PROBABLY NOT)]>>>>
+++ Restructure CellProfiler.m so that the GUI creates a configuration file which is then sent to a simple pipeline program. That would make farming out jobs to multiple machines easier, running a job that broke somewhere, and it would make it easier to create new GUIs aimed at different tasks, if people wanted to. The current GUI wouldn't actually need to change, it could still call the pipeline-running-function and parse errors from it (which is a definite good thing to keep around).   It would be entirely under the hood.