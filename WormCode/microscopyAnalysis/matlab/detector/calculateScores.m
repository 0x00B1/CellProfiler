function scores = calculateScores(I,D,mask,sz,step_sz,as,numQuadrants)
% calculate the scores matrix using the pre-preocessed and rotated images
% I,D and the externally defined functions calcF and calcScore (calcScore
% is matlab code generated by JBoost.)
    
    if(nargin<7)
        numQuadrants = 4;
    end

    nA = size(I,2)*numQuadrants;			% number of angles
    center = size(I{1,1})/2;
    nL=floor((center-ceil([sz sz]/2))/step_sz);% number of steps (from
                                               % center to edge)
    
    scores=zeros(nL(1)*2+1,nL(2)*2+1,nA);
    
    nI = size(I,1);
    nD = size(D,1);
    
    scaled_mask = imresize(mask,[sz,sz])>0.5;
    for angle_i=1:nA
        curAngle = (angle_i-1)*as
        for y_i=-nL(1):nL(1)
            y=y_i*step_sz;
            for x_i = -nL(2):nL(2)
                x=x_i*step_sz;
                for i=1:nI
                    Iboxes{i} = getRotatedBox(I(i,:),x,y,sz,curAngle);
                end
                for i=1:nD
                    Dboxes{i} = getRotatedDerivBox(D(i,:),x,y,sz,curAngle);
                end
                f=calcF(Iboxes,Dboxes,scaled_mask);
                defined = (f==f);
                scr = calcScore(f,defined);
                scores(y_i+nL(1)+1,x_i+nL(2)+1,angle_i) = scr;
            end
        end
    end

